<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>network virtualization on SoByte</title>
    <link>https://www.sobyte.net/tags/network-virtualization/</link>
    <description>Recent content in network virtualization on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 01 May 2022 16:39:50 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/network-virtualization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Network Virtualization] VLAN</title>
      <link>https://www.sobyte.net/post/2022-05/network-virtualization-vlan/</link>
      <pubDate>Sun, 01 May 2022 16:39:50 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/network-virtualization-vlan/</guid>
      <description>Why VLANs are needed What is VLAN A LAN can be a network of a few home computers or a corporate network of hundreds of computers, and a VLAN (Virtual LAN) refers specifically to a network that is segmented using routers - that is, a broadcast domain.
Let&amp;rsquo;s review the concept of a broadcast domain here.
The Broadcast Domain is the range to which a broadcast frame (with a destination MAC address of all 1s) can pass, i.</description>
    </item>
    
    <item>
      <title>[Network Virtualization] MacVLAN</title>
      <link>https://www.sobyte.net/post/2022-05/network-virtualization-macvlan/</link>
      <pubDate>Sun, 01 May 2022 16:31:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/network-virtualization-macvlan/</guid>
      <description>Macvlan allows you to configure multiple virtual network interfaces on a single network interface of the host, these network interfaces have their own independent MAC addresses, or can be configured with IP addresses for communication. virtual machines or container networks under Macvlan are in the same network segment as the host and share the same broadcast domain. macvlan is more similar to Bridge, but because it eliminates the Bridge, it is simpler and more efficient to configure and debug.</description>
    </item>
    
    <item>
      <title>[Network Virtualization] Vxlan</title>
      <link>https://www.sobyte.net/post/2022-05/network-virtualization-vxlan/</link>
      <pubDate>Sun, 01 May 2022 11:56:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/network-virtualization-vxlan/</guid>
      <description>VXLAN is Virtual eXtensible Local Area Network, a virtual extensible local area network. It is an overlay technology that builds a virtual layer 2 network over a layer 3 network. rfc7348 (Ref. 1) describes it as follows.
 A framework for overlaying virtualized layer 2 networks over lay 3 networks.
 Every technology that comes out has a problem to solve, and VXLAN is no exception, so let&amp;rsquo;s take a look at what problems VXLAN is trying to solve.</description>
    </item>
    
    <item>
      <title>[Network Virtualization] IPVlan</title>
      <link>https://www.sobyte.net/post/2022-05/network-virtualization-ipvlan/</link>
      <pubDate>Sun, 01 May 2022 11:48:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/network-virtualization-ipvlan/</guid>
      <description>IPVLANs are similar to MACVLANs in that they both virtualize multiple virtual network interfaces from a single host interface. An important difference is that all virtual interfaces have the same mac address and different ip addresses.
Because all virtual interfaces share a mac address, there are some things to keep in mind.
 The DHCP protocol generally uses the mac address as the machine identifier when assigning an ip. In this case, the client needs to configure a unique ClientID field when dynamically acquiring the ip, and the DHCP server should be properly configured to use this field as the machine identifier instead of using the mac address   Ipvlan is a relatively new feature of the linux kernel.</description>
    </item>
    
    <item>
      <title>[Network Virtualization] Ipip</title>
      <link>https://www.sobyte.net/post/2022-04/network-virtualization-ipip/</link>
      <pubDate>Sat, 30 Apr 2022 11:54:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/network-virtualization-ipip/</guid>
      <description>In the previous note, we learned about a typical principle of VPN through TUN/TAP devices when introducing network devices, but did not practice how TUN/TAP virtual network devices specifically function practically in linux. In this note we will look at how a very typical IPIP tunnel in the cloud computing field is implemented through TUN devices.
IPIP Tunneling As we mentioned in the previous note, the TUN network device can encapsulate a Layer 3 (IP) network packet within another Layer 3 network packet, and it looks like the packet sent out through the TUN device will look like this.</description>
    </item>
    
    <item>
      <title>[Network Virtualization] Bridge</title>
      <link>https://www.sobyte.net/post/2022-04/network-virtualization-bridge/</link>
      <pubDate>Sat, 30 Apr 2022 11:45:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/network-virtualization-bridge/</guid>
      <description>The bridge is a virtual network device, so it has the characteristics of a virtual network device and can be configured with IP, MAC address, etc. Unlike other virtual network devices, the bridge is a virtual switch and has similar functions to a physical switch. Unlike other virtual network devices, bridge is a virtual switch with similar functions as a physical switch. bridge is connected to a protocol stack at</description>
    </item>
    
    <item>
      <title>[Network Virtualization] Veth Pair</title>
      <link>https://www.sobyte.net/post/2022-04/network-virtualization-veth-pair/</link>
      <pubDate>Sat, 30 Apr 2022 11:37:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/network-virtualization-veth-pair/</guid>
      <description>A veth virtual network device is connected to a protocol stack on one end and another veth device on the other end instead of a physical network. A packet sent out of a pair of veth devices goes directly to another veth device. Each veth device can be configured with an IP address and participate in the Layer 3 IP network routing process.
The following is an example of a typical veth device pair.</description>
    </item>
    
    <item>
      <title>[Network Virtualization] TUN/TAP</title>
      <link>https://www.sobyte.net/post/2022-04/network-virtualization-tun-tap/</link>
      <pubDate>Sat, 30 Apr 2022 10:49:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/network-virtualization-tun-tap/</guid>
      <description>The TUN/TAP virtual network device is connected to the protocol stack at one end, and at the other end is not a physical network, but another application in user space. That is, the packets sent from the protocol stack to the TUN/TAP can be read by the application, and of course the application can send packets directly to the TUN/TAP. A typical TUN/TAP example is shown in the following figure.</description>
    </item>
    
    <item>
      <title>Network Virtualization</title>
      <link>https://www.sobyte.net/post/2022-04/network-virtualization/</link>
      <pubDate>Sat, 30 Apr 2022 10:37:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/network-virtualization/</guid>
      <description>Network Virtualization is the process of building a virtual network with a different topology than the physical network. For example, if a company has multiple offices around the world, but wants its internal network to be one, it needs network virtualization technology.
Starting with NAT Suppose one machine in the Beijing office has an IP of 10.0.0.1 (which is an intranet IP and cannot be used on the Internet) and one machine in the Shanghai office has an IP of 10.</description>
    </item>
    
  </channel>
</rss>
