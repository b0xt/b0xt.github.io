<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>spring on SoByte</title>
    <link>https://www.sobyte.net/tags/spring/</link>
    <description>Recent content in spring on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 01 Apr 2022 00:11:32 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring official announcement of the network of large vulnerabilities, with solutions</title>
      <link>https://www.sobyte.net/post/2022-04/spring-officials-announced-vulnerability/</link>
      <pubDate>Fri, 01 Apr 2022 00:11:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/spring-officials-announced-vulnerability/</guid>
      <description>On the evening of March 31, the Spring community released an article called &amp;ldquo;Spring Framework RCE, Early Announcement&amp;rdquo;, which officially announced the recent Spring vulnerability. It confirms that the rumored vulnerabilities do exist and are not the CVEs announced on March 28th and 29th as many recent articles say, so if you are solving the problem according to those articles, please start over with this official announcement.
The identified RCE vulnerability in the Spring Core Framework is CVE number CVE-2022-22965.</description>
    </item>
    
    <item>
      <title>Spring framework has a high-risk RCE 0day vulnerability? Core developers clarify</title>
      <link>https://www.sobyte.net/post/2022-03/spring-core-vulnerability-maybe-is-fake-news/</link>
      <pubDate>Thu, 31 Mar 2022 16:04:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/spring-core-vulnerability-maybe-is-fake-news/</guid>
      <description>Recently, the most popular open source lightweight Java framework Spring was exposed to a high-risk RCE (Remote Control Equipment) zero-day vulnerability , Peking University Computing Center, praetorian, bleepingcomputer and other sites have reported on the vulnerability.
According to a wildly popular online introduction, the RCE vulnerability stems from the SerializationUtils#dserialize method at the core of the Spring framework, which is based on Java&amp;rsquo;s serialization and deserialization mechanism and can lead to Remote Code Execution (RCE), which can potentially affect anyone using JDK9 and above.</description>
    </item>
    
    <item>
      <title>Jdk9 may have a more serious vulnerability than log4j</title>
      <link>https://www.sobyte.net/post/2022-03/java-spring-vulnerability/</link>
      <pubDate>Tue, 29 Mar 2022 22:23:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/java-spring-vulnerability/</guid>
      <description>Former Alibaba senior researcher Yun Shu. On the microblogging site said &amp;ldquo;There&amp;rsquo;s a super big vulnerability and we&amp;rsquo;re ready to EXP&amp;rdquo;.
According to the discussion below this microblog, this may be a JDK9, spring-related vulnerability. Yunshu said this vulnerability is more serious than the last log4j.
After the lg4j vulnerability swept the world, the Java community will usher in the darkest hour?</description>
    </item>
    
    <item>
      <title>Spring Event Publishing and Listening Mechanism</title>
      <link>https://www.sobyte.net/post/2021-06/spring-event-publishing-and-listening-mechanism/</link>
      <pubDate>Sun, 27 Jun 2021 11:20:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/spring-event-publishing-and-listening-mechanism/</guid>
      <description>Spring provides the ApplicationContext event mechanism to publish and listen to events, which is a very useful feature. Spring has some built-in events and listeners, such as before the Spring container starts, after the Spring container starts, after the application fails to start, etc. The listeners on these events will respond accordingly. Of course, we can also customize our listeners to listen to Spring&amp;rsquo;s original events. Or we can customize</description>
    </item>
    
    <item>
      <title>Why Will Spring Remain One of the Best Platforms in the Cloud Native Era</title>
      <link>https://www.sobyte.net/post/2021-06/why-will-spring-remain-one-of-the-best-platforms-in-the-cloud-native-era/</link>
      <pubDate>Thu, 24 Jun 2021 10:48:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/why-will-spring-remain-one-of-the-best-platforms-in-the-cloud-native-era/</guid>
      <description>Back in 2015, the keynote at the SpringOne 2015 conference in Washington was Cloud Native Enterprise. The slogan of that conference was also Cloud Native and the posters were all over the place with Cloud Native.
You may wonder how you could call it Cloud Native when containers weren&amp;rsquo;t popular at that time. Although many people may not have the same understanding of Cloud Native, more and more people believe that &amp;ldquo;Cloud native is about culture, not containers&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Spring Master Slave Databas Configuration and Dynamic Datasource Switching Principles</title>
      <link>https://www.sobyte.net/post/2021-06/spring-master-slave-databas-configuration-and-dynamic-datasource-switching-principles/</link>
      <pubDate>Sun, 20 Jun 2021 15:13:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/spring-master-slave-databas-configuration-and-dynamic-datasource-switching-principles/</guid>
      <description>In large applications, it is a common design pattern to configure master-slave databases and use read-write separation. In Spring applications, to implement read-write separation, it is best to not make changes to existing code, but to support it transparently at the bottom.
Spring has a built-in AbstractRoutingDataSource that can configure multiple data sources into a Map and then, depending on the key, return different data sources. Because AbstractRoutingDataSource is also a DataSource interface, the application can set the key first, and the code that accesses the database can get the corresponding real data source from AbstractRoutingDataSource to access the specified database.</description>
    </item>
    
  </channel>
</rss>
