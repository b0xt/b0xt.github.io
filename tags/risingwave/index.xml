<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>risingwave on SoByte</title>
    <link>https://www.sobyte.net/tags/risingwave/</link>
    <description>Recent content in risingwave on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 02 May 2022 10:43:47 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/risingwave/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>State Management in RisingWave</title>
      <link>https://www.sobyte.net/post/2022-05/state-management-in-risingwave/</link>
      <pubDate>Mon, 02 May 2022 10:43:47 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/state-management-in-risingwave/</guid>
      <description>RisingWave is a recent open source Rust written cloud native streaming database product. Today a brief description of the state management mechanism in RisingWave based on the following diagram.
Hummock Overview In RisingWave&amp;rsquo;s architecture, the storage of all internal state and materialized views is based on a set of stores called Hummock, which is not a storage system but a storage library. Hummock is not a storage system, but a storage library, and Hummock currently supports S3 protocol-compliant storage services as its backend.</description>
    </item>
    
  </channel>
</rss>
