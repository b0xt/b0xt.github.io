<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on SoByte</title>
    <link>https://www.sobyte.net/tags/linux/</link>
    <description>Recent content in linux on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 09 Aug 2022 12:44:11 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enable kvm nested virtualization on Linux</title>
      <link>https://www.sobyte.net/post/2022-08/linux-kvm-nested-virtualization/</link>
      <pubDate>Tue, 09 Aug 2022 12:44:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-08/linux-kvm-nested-virtualization/</guid>
      <description>kvm supports nested virtualization, which means that virtual machines can be created within virtual machines. This article focuses on how to turn on kvm nested virtualization in CentOS 7 with Intel processors.
kvm is mainly implemented through the kernel module, so we can check if kvm nested virtualization is enabled on our system by simply executing the following command and know if it is supported based on the output.
1 2  $ cat /sys/module/kvm_intel/parameters/nested N   If not, we need to create a new kvm-nested.</description>
    </item>
    
    <item>
      <title>Linux tree-structured file system</title>
      <link>https://www.sobyte.net/post/2022-08/linux-tree-structured-file-system/</link>
      <pubDate>Sun, 07 Aug 2022 10:45:41 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-08/linux-tree-structured-file-system/</guid>
      <description>For every Linux learner, understanding the directory structure of the Linux file system is a crucial step to learn Linux well. An in-depth understanding of the standards of the Linux file directory structure and the detailed functions of each directory is very important for us to use the Linux system well.
The file system&amp;rsquo;s are used to organize and arrange file access, so it is visible, in Linux, we can view its structure through tools such as ls, in Linux, we see a tree structure; for example, the operating system is installed in a file system, he behaves as a tree structure starting from /.</description>
    </item>
    
    <item>
      <title>In-depth understanding of containerization technologies</title>
      <link>https://www.sobyte.net/post/2022-07/containerized/</link>
      <pubDate>Thu, 21 Jul 2022 13:29:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/containerized/</guid>
      <description>The following is a standard explanation of containerization. A container is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another. A Docker container image is a lightweight, standalone, executable package of software that includes everything needed to run an application: code, runtime, system tools, system libraries and settings. Containers are different from virtual</description>
    </item>
    
    <item>
      <title>How to view hardware and system information in Linux</title>
      <link>https://www.sobyte.net/post/2022-07/linux-os/</link>
      <pubDate>Mon, 18 Jul 2022 18:38:08 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/linux-os/</guid>
      <description>Linux often needs to check the system resources or hardware resources, and there are many command lines corresponding to it.
In this article, we will summarize and list the common query methods based on our experience for reference.
The following commands use Ubuntu 1804 and CentOS7 as the test platform.
1. System resources 1.1. Linux distributions and kernels The uname -r command outputs the distribution and kernel information. Most distributions basically come with this command, but the output may not contain the full name of the distribution.</description>
    </item>
    
    <item>
      <title>Linux Netfilter/iptables</title>
      <link>https://www.sobyte.net/post/2022-07/linux-iptables/</link>
      <pubDate>Mon, 18 Jul 2022 13:20:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/linux-iptables/</guid>
      <description>The Linux network stack is very efficient and at the same time complex. If we want to do something with the data we care about during the processing of the data, how can we do it?Linux provides a mechanism to implement custom packet processing for the user.
There is a set of callback function hooks in the Linux network stack, through which hooks can be attached to the Linux network stack to perform some operations on the packet during processing, such as filtering, modifying, dropping, etc.</description>
    </item>
    
    <item>
      <title>Add Google Authenticator to the sshd service</title>
      <link>https://www.sobyte.net/post/2022-07/ssh-google-authenticator/</link>
      <pubDate>Wed, 13 Jul 2022 13:39:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/ssh-google-authenticator/</guid>
      <description>This article explains how to add Google Authenticator to your centos 7 system to enable double authentication for ssh to improve the security of ssh services when logging in with a password.
1. Install Google Authenticator on Linux First we need to enable the epel repository
1  yum install epel-release   Install the relevant dependency libraries.
1  yum install pam-devel   Install google authenticator.
1 2 3 4  # View version information yum list google-authenticator # install yum install google-authenticator   After the installation is complete, initialize the configuration by running the following command directly to start the initial configuration.</description>
    </item>
    
    <item>
      <title>Rockylinux Quick Start</title>
      <link>https://www.sobyte.net/post/2022-07/rockylinux-quick-start/</link>
      <pubDate>Wed, 13 Jul 2022 13:09:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/rockylinux-quick-start/</guid>
      <description>1. background introduction Here is an excerpt from the official website, you can visit official website for more information if you are interested. The official website provides multiple language support, which is still quite good in terms of experience.
 Rocky Linux is a community-based, enterprise-class operating system. It is designed to be 100% bug-compatible with the top U.S. enterprise Linux distributions due to a shift in development by the latter&amp;rsquo;s downstream partners.</description>
    </item>
    
    <item>
      <title>Linking problems with the COMMON symbol in the Archive</title>
      <link>https://www.sobyte.net/post/2022-07/archive-common-linking/</link>
      <pubDate>Tue, 12 Jul 2022 10:06:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/archive-common-linking/</guid>
      <description>I recently saw an issue: irssi 1.4.1 fails to build on darwin arm64, and it&amp;rsquo;s phenomenon is that it reports an error when linking.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  Undefined symbols for architecture arm64: &amp;#34;_current_theme&amp;#34;, referenced from: _format_get_text_theme in libfe_common_core.a(formats.c.o) _format_get_text in libfe_common_core.a(formats.c.o) _strip_codes in libfe_common_core.a(formats.c.o) _format_send_as_gui_flags in libfe_common_core.a(formats.c.o) _window_print_daychange in libfe_common_core.a(fe-windows.c.o) _printformat_module_dest_charargs in libfe_common_core.a(printtext.c.o) _printformat_module_gui_args in libfe_common_core.a(printtext.c.o) .</description>
    </item>
    
    <item>
      <title>Blkio Cgroup</title>
      <link>https://www.sobyte.net/post/2022-07/blkio-cgroup/</link>
      <pubDate>Thu, 07 Jul 2022 12:38:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/blkio-cgroup/</guid>
      <description>blkio cgroup basic functions blkio is a subsystem in cgroup v1. The main reason for using cgroup v1 blkio subsystem is to reduce the problem of mutual interference when processes read and write to the same disk together.
The cgroup v1 blkio control subsystem can limit the IOPS and throughput of process reads and writes, but it can only limit the speed of file reads and writes for Direct I/O, but not for Buffered I/O.</description>
    </item>
    
    <item>
      <title>Switching the ConnectX-4 to Ethernet mode</title>
      <link>https://www.sobyte.net/post/2022-07/connectx-4-switch-to-ethernet/</link>
      <pubDate>Sun, 03 Jul 2022 10:47:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/connectx-4-switch-to-ethernet/</guid>
      <description>Background Recently, I was configuring a network for the server room and came across a requirement to use ConnectX-4 as an Ethernet card, which supports both Infiniband and Ethernet, but the default is Infiniband mode, so I need to use the mlxconfig tool to do this switch.
How to switch In the Using mlxconfig documentation, it is written how to switch the NIC to Infiniband mode.
1 2 3 4 5 6 7 8 9 10 11 12 13  $ mlxconfig -d /dev/mst/mt4103_pci_cr0 set LINK_TYPE_P1=1 LINK_TYPE_P2=1 Device #1: ---------- Device type: ConnectX3Pro PCI device: /dev/mst/mt4103_pci_cr0 Configurations: Next Boot New LINK_TYPE_P1 ETH(2) IB(1) LINK_TYPE_P2 ETH(2) IB(1) Apply new Configuration?</description>
    </item>
    
    <item>
      <title>rsyslog collects remote logs</title>
      <link>https://www.sobyte.net/post/2022-07/rsyslog-remote/</link>
      <pubDate>Sun, 03 Jul 2022 10:41:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/rsyslog-remote/</guid>
      <description>Background Recently, while running maintenance, I discovered that network devices (such as switches) have a feature to send logs remotely, i.e. they can send logs to a specified server via the syslog udp protocol. To do this, you can run rsyslog on the server and collect the logs.
rsyslog configuration The default rsyslog configuration collects the system local configuration, so we need to write an rsyslog configuration for collecting remote logs.</description>
    </item>
    
    <item>
      <title>Linux nslookup command</title>
      <link>https://www.sobyte.net/post/2022-07/nslookup/</link>
      <pubDate>Fri, 01 Jul 2022 12:30:04 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-07/nslookup/</guid>
      <description>We often check the DNS information of an IP or domain name at work to see which machine the current IP is bound to, or if the current domain name resolves properly. This is where the nslookup command comes into play.
Command Details The nslookup command is mainly used to query the DNS information of a domain name. nslookup has two working modes: &amp;ldquo;interactive mode&amp;rdquo; and &amp;ldquo;non-interactive mode&amp;rdquo;. Enter nslookup directly in the command line, and you will enter the interactive mode without entering any parameters.</description>
    </item>
    
    <item>
      <title>Find and delete large files that have been opened but deleted</title>
      <link>https://www.sobyte.net/post/2022-06/show-file-deleted/</link>
      <pubDate>Tue, 28 Jun 2022 13:12:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/show-file-deleted/</guid>
      <description>In the daily operation and maintenance process, we often need to deal with disk space issues, when we receive alarms, the first time we will go to find those large files, generally such as centos, the large file may be /var/log/messages.
But sometimes, there is a situation where you can&amp;rsquo;t find the big files, and when you look for them by du, the size of the statistics doesn&amp;rsquo;t correspond to the space occupied by df.</description>
    </item>
    
    <item>
      <title>Linux Basics: Display Manager</title>
      <link>https://www.sobyte.net/post/2022-06/linux-display-manager/</link>
      <pubDate>Mon, 27 Jun 2022 13:06:05 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/linux-display-manager/</guid>
      <description>Display Manager (DM) is a program that provides graphical login capabilities for Linux distributions. It controls user sessions and manages user authentication. Display Manager will start the display server and load the desktop environment as soon as you enter your username and password.
The display manager is usually synonymous with the login screen. It is, after all, the visible part. However, the visible login screen, also called the welcome page (greeter), is only part of the display manager.</description>
    </item>
    
    <item>
      <title>iptables 15-Minute Tutorial &amp; Common Commands Summary</title>
      <link>https://www.sobyte.net/post/2022-06/iptables/</link>
      <pubDate>Sun, 26 Jun 2022 11:31:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/iptables/</guid>
      <description>iptables is a very classic firewall tool for Linux, but the learning curve is very high due to its complex structure, long official documentation, many parameters, and awkward configuration (default does not support persistence, commands added to take effect, etc.), and risky configuration (accidentally lose connection with the server). It is extremely unfriendly to Linux newbies or people with poor memory (I have a very poor memory). The purpose of</description>
    </item>
    
    <item>
      <title>Mv and Rename</title>
      <link>https://www.sobyte.net/post/2022-06/mv-and-rename/</link>
      <pubDate>Thu, 23 Jun 2022 13:57:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/mv-and-rename/</guid>
      <description>I had an interesting question today: &amp;ldquo;What happens if I Ctrl C in the middle of an mv operation? Will the file be corrupted?&amp;rdquo; Without considering error handling, this question needs to be discussed in separate cases.
 Is it on the same file system? Is the object of the mv a file or a folder?  First, the simplest case: mv a file on the same filesystem, where mv is done using rename syscall.</description>
    </item>
    
    <item>
      <title>Linus Torvalds: Rust For Linux may be merged into the Linux 5.20 kernel</title>
      <link>https://www.sobyte.net/post/2022-06/linxu-rust/</link>
      <pubDate>Wed, 22 Jun 2022 16:49:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/linxu-rust/</guid>
      <description>At the recent LINUX Foundation-Open Source Summit, Linus Torvalds, talking about &amp;ldquo;The Possibility of Rust in the LINUX Kernel&amp;rdquo;, said that he expects to merge the Rust infrastructure in the kernel soon (maybe even in the next version of Linux 5.20).
While no Rust requests for Linux have been sent in or merged yet, the Linux kernel has seen initial support for Rust in terms of basic implementations, such as some basic example drivers and so on.</description>
    </item>
    
    <item>
      <title>How to track network traffic</title>
      <link>https://www.sobyte.net/post/2022-06/track-network-traffic/</link>
      <pubDate>Mon, 20 Jun 2022 21:26:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/track-network-traffic/</guid>
      <description>Background Through the monitoring has found certain scenarios in the traffic is relatively large, not reasonable, need to know which processes are these traffic are accessing which services trigger.
Method  locate which processes are triggering the traffic. locate which IPs are mainly responsible for accessing the traffic Locate the specific ports that are having the larger traffic.  Tools nethogs/iftop/tcptrack
Locate the process 1  sudo nethogs   From the above graph you can see the total traffic, and the size of the traffic for each process.</description>
    </item>
    
    <item>
      <title>How much overhead is actually required for process/thread context switching?</title>
      <link>https://www.sobyte.net/post/2022-06/os-switch/</link>
      <pubDate>Mon, 20 Jun 2022 21:10:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/os-switch/</guid>
      <description>Processes are a very familiar concept, and we have probably heard of process context switching overhead. So let&amp;rsquo;s think about a question today, just how much CPU time is consumed by a process context switch? As threads are said to be lighter than processes, will their context switches save much CPU time than process switches? With these questions in mind, let&amp;rsquo;s get to the point.
1. Processes and process switching Processes are one of the great inventions of operating systems, shielding applications from hardware details such as CPU scheduling and memory management, and abstracting the concept of a process so that applications can concentrate on implementing their own business logic and perform many tasks &amp;ldquo;simultaneously&amp;rdquo; on a limited CPU.</description>
    </item>
    
    <item>
      <title>The cost of context switching</title>
      <link>https://www.sobyte.net/post/2022-06/ctx-switch/</link>
      <pubDate>Mon, 20 Jun 2022 20:51:00 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/ctx-switch/</guid>
      <description>Concepts Process switching, soft interrupts, kernel state user state switching, CPU hyperthreading switching Kernel state user state switch: still in a thread, just from the user state into the kernel state for safety and other factors need more instructions, system calls specific more what to do see: https://github.com/torvalds/linux/blob/v5.2/arch/x86/entry/entry_64.S#L145 Soft interrupts: such as network packet arrival, triggering ksoftirqd (one per core) process to handle, is a kind of process switching Process</description>
    </item>
    
    <item>
      <title>Linux Eventfd</title>
      <link>https://www.sobyte.net/post/2022-06/linux-eventfd/</link>
      <pubDate>Wed, 15 Jun 2022 13:05:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/linux-eventfd/</guid>
      <description>eventfd definition The eventfd() function creates an &amp;ldquo;eventfd object&amp;rdquo; that can be used by the user-state program as an event waiting/notification mechanism and the kernel can notify the user-state program of the event.
1 2  #include &amp;lt;sys/eventfd.h&amp;gt;int eventfd(unsigned int initval, int flags);   Initialization parameters initval The eventfd object contains a uint64_t counter, which is saved by the kernel. The value of this counter can be initialized by the initval parameter when initializing eventfd.</description>
    </item>
    
    <item>
      <title>4 Ways to View Log File Write Speed in Linux</title>
      <link>https://www.sobyte.net/post/2022-06/linux-file-witr-speed/</link>
      <pubDate>Sat, 11 Jun 2022 12:09:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/linux-file-witr-speed/</guid>
      <description>Sometimes we need to check the growth rate of a file, such as a log file, to get a feel for the load on the system, because in general, the faster the logs are written, the heavier the load on the system.
In this article, we will introduce several ways to view the growth rate of logs in Linux, as follows.
Using dd The first thing to introduce is dd, as the dd command comes with almost all major distributions and requires no additional installation, as follows.</description>
    </item>
    
    <item>
      <title>Linux Systemd Getting Started</title>
      <link>https://www.sobyte.net/post/2022-06/linux-systemd/</link>
      <pubDate>Sat, 11 Jun 2022 11:36:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/linux-systemd/</guid>
      <description>Systemd is a centralized system and setup manager for the Linux computer operating system, including daemons, libraries and applications, developed by Lennart Poettering. The goal was to provide a better framework to represent the dependencies between system services, to enable parallel startup of services during system initialization, and to reduce the system overhead of the shell, eventually replacing the System V and BSD style init programs that are now commonly used.</description>
    </item>
    
    <item>
      <title>Usage of the hwclock command</title>
      <link>https://www.sobyte.net/post/2022-06/linux-time-hwclock/</link>
      <pubDate>Tue, 07 Jun 2022 13:44:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/linux-time-hwclock/</guid>
      <description>Linux, there are several tools are related to time, recently work encountered them, so I intend to write a few articles related to Linux time.
Today, I&amp;rsquo;d like to talk about hwclock, a tool that is probably used by those who play with the Internet of Things, because it is often used to keep the time of hardware devices, but most of the former devices are often networked, that is, they use NTP.</description>
    </item>
    
    <item>
      <title>Basic policies for iptables and firewalld in CentOS</title>
      <link>https://www.sobyte.net/post/2022-06/iptables-and-firewalld/</link>
      <pubDate>Tue, 07 Jun 2022 12:39:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/iptables-and-firewalld/</guid>
      <description>firewalld in CentOS is built on iptables and some other programs. firewalld uses some more friendly configuration methods to implement iptables operations. It also extends some features that are not supported by iptables itself, such as timed firewall rules. The full program and library dependencies are available on the firewalld website at https://firewalld.org/.
iptables processes network packets by manipulating the Linux kernel netfilter module.
Please temporarily disable the firewalld firewall on your machine before operating the command, and make sure you have access to the physical machine (or a physical terminal in a virtual machine), as some rules will block access to SSH port 22 and prevent subsequent operations.</description>
    </item>
    
    <item>
      <title>Use the Linux built-in tc command to simulate a weak network environment</title>
      <link>https://www.sobyte.net/post/2022-06/linux-tc/</link>
      <pubDate>Tue, 07 Jun 2022 12:28:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-06/linux-tc/</guid>
      <description>Most Linux distributions come with the command tc for traffic control.
You can read more about tc&amp;rsquo;s qdisc in the article at the end of this article.
The command to simulate a weak network is given here directly.
It works directly on the specified physical NIC.
1 2  # 200m Latency 30ms Jitter + 10% packet loss + 10% repetition + 10% disorder tc qdisc add dev ens256 root netem delay 200ms 30ms loss 10% duplicate 10% reorder 10%   Works on the specified port under the NIC, here is an example of port 2000.</description>
    </item>
    
    <item>
      <title>Linux free command usage and understanding</title>
      <link>https://www.sobyte.net/post/2022-05/linux-free/</link>
      <pubDate>Tue, 31 May 2022 19:12:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/linux-free/</guid>
      <description>When using linux operating systems, it is a common requirement to check memory usage, for example, to analyze system health or to determine if the machine is ready to deploy more new services, etc. This is a common requirement.
The solution to this problem is also very simple. Most cloud vendors provide consoles that display monitoring information for various machine metrics, and memory usage monitoring is definitely essential. For those who know a little bit about linux, you can also use the free command to view more detailed information.</description>
    </item>
    
    <item>
      <title>Linux Blocking IO</title>
      <link>https://www.sobyte.net/post/2022-05/linux-blocking-io/</link>
      <pubDate>Sun, 29 May 2022 11:30:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/linux-blocking-io/</guid>
      <description>IO tasks An IO task is a process in which a program reads data from a file or writes data to a file, a process that generally requires the CPU to control it. For example, a network IO task. 1 2 3 4 5 6 7 8 9 10 11 12 //创建socket int s = socket(AF_INET, SOCK_STREAM, 0); //绑</description>
    </item>
    
    <item>
      <title>Configuring timed tasks with systemd timer</title>
      <link>https://www.sobyte.net/post/2022-05/systemd-timer/</link>
      <pubDate>Fri, 27 May 2022 13:56:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/systemd-timer/</guid>
      <description>1. Prepare the timing script If it is a Bash script, the first line needs to specify the interpreter.
1 2 3 4 5 6 7 8 9 10 11 12  #!/bin/sh /usr/local/bin/kubectl get pods --all-namespaces -o wide | grep Evicted | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 /usr/local/bin/kubectl delete pod -n /usr/local/bin/kubectl get pods --all-namespaces -o wide | grep Error | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 /usr/local/bin/kubectl delete pod -n /usr/local/bin/kubectl get pods --all-namespaces -o wide | grep Completed | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 /usr/local/bin/kubectl delete pod -n /usr/local/bin/kubectl get pipelinerun --all-namespaces -o wide | grep Succeeded | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 /usr/local/bin/kubectl delete pipelinerun -n /usr/local/bin/kubectl get pipelinerun --all-namespaces -o wide | grep PipelineRunTimeout | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 /usr/local/bin/kubectl delete pipelinerun -n /usr/local/bin/kubectl get pipelinerun --all-namespaces -o wide | grep InvalidWorkspaceBindings | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 /usr/local/bin/kubectl delete pipelinerun -n /usr/local/bin/kubectl get pipelinerun --all-namespaces -o wide | grep Failed | awk &amp;#39;{print $1,$2}&amp;#39; | xargs -L1 /usr/local/bin/kubectl delete pipelinerun -n /usr/local/bin/kubectl describe -A pvc | grep -E &amp;#34;^Name:.</description>
    </item>
    
    <item>
      <title>Dissecting Linux container implementation principles using Go</title>
      <link>https://www.sobyte.net/post/2022-05/go-linux-container/</link>
      <pubDate>Thu, 19 May 2022 13:35:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/go-linux-container/</guid>
      <description>Advantages of containers Traditional model deployments, which run multiple applications directly on a physical server, may cause performance degradation of other applications if one of them takes up most of the resources. In the era of virtualized deployments, multiple virtual machines (VMs) can be run on the CPU of a single physical server, with each VM being a complete computer running all components (including the operating system) on top of</description>
    </item>
    
    <item>
      <title>Adding swap partitions manually for Linux</title>
      <link>https://www.sobyte.net/post/2022-05/linux-swap/</link>
      <pubDate>Tue, 17 May 2022 19:32:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/linux-swap/</guid>
      <description>Swap partition in Linux is actually virtual memory in windows, when the server memory is not enough, it will use swap partition memory. to alleviate the situation of not having enough memory.
 In the cloud server scenario, the servers provided to us by the cloud vendors are basically without swap partition.
 Creating a Swap Partition The swap partition uses the local hard disk and uses the capacity of the hard disk as memory.</description>
    </item>
    
    <item>
      <title>2 recommended tools for finding files in the file system</title>
      <link>https://www.sobyte.net/post/2022-05/find-file-tools/</link>
      <pubDate>Sat, 14 May 2022 13:57:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/find-file-tools/</guid>
      <description>As you know, in Linux or Unix-like file systems, you can use the find command if you want to find a file by the filename keyword. Then this article will recommend 2 tools that can quickly find files with better performance than the find command and can replace the use of find in some scenarios.
mlocate Most Linux distributions provide the mlocate package, which includes a locate command for finding files and an updatedb command to update the file index for locate.</description>
    </item>
    
    <item>
      <title>How to use systemd timing service?</title>
      <link>https://www.sobyte.net/post/2022-05/systemd-timer-units/</link>
      <pubDate>Sat, 14 May 2022 13:41:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/systemd-timer-units/</guid>
      <description>We know that on Linux and Unix-like systems it is common to use crontab to create timed tasks.
On Ubuntu we use apt install mlocate to install a script file to /etc/cron.daily/mlocate, that is, to execute updatedb daily through the Cron mechanism. However, on my openSUSE, but I found no Crontab configuration, but I found that the index file was updated at zero hour every day, so who performs this timed task?</description>
    </item>
    
    <item>
      <title>Transferring files with ssh</title>
      <link>https://www.sobyte.net/post/2022-05/transferring-files-ssh/</link>
      <pubDate>Thu, 12 May 2022 13:18:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/transferring-files-ssh/</guid>
      <description>Today I received a work order from my R&amp;amp;D colleague, the content is: I need to copy the files to the server and request help to install the scp program.
I tried to execute scp command on that server, but the result is -bash: scp: command not found, but ssh is working fine. In this case the openssh-clients were deleted.
The scp command is based on the ssh protocol, so why bother with scp when you can use ssh?</description>
    </item>
    
    <item>
      <title>Introduction to the Linux file system inode</title>
      <link>https://www.sobyte.net/post/2022-05/linux-inode/</link>
      <pubDate>Wed, 11 May 2022 20:31:37 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/linux-inode/</guid>
      <description>Normally when we use a computer, our intuition is that the computer is divided into two kinds of things: folders and files. But in fact, in the operating system&amp;rsquo;s file system, folders can also be thought of as files that store special content; &amp;ldquo;everything is a file&amp;rdquo;. And the file system doesn&amp;rsquo;t use file names to distinguish files, but rather a string of non-repeating numbers. In this article, we will introduce some concepts and principles of the file system.</description>
    </item>
    
    <item>
      <title>What exactly is TTY?</title>
      <link>https://www.sobyte.net/post/2022-05/tty/</link>
      <pubDate>Mon, 09 May 2022 13:29:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/tty/</guid>
      <description>Let&amp;rsquo;s start with an interview question: We know that there are some common shortcuts in the terminal, Ctrl+E to move to the end of a line, Ctrl+W to delete a word, Ctrl+B to move a letter forward, and pressing the up key to bring up the last shell command used. Among these 4 shortcuts, there is one that is implemented differently from the others, which one is it?
The answer is Ctrl+W.</description>
    </item>
    
    <item>
      <title>The story of /bin /usr/bin and /usr/local/bin</title>
      <link>https://www.sobyte.net/post/2022-05/user-bin/</link>
      <pubDate>Sun, 08 May 2022 17:33:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/user-bin/</guid>
      <description>The $PATH variable on Linux systems usually contains /bin, /usr/bin, and /usr/local/bin. All three of these directories have binary programs in them, and there are a lot of misconceptions on the web about the differences. (Just like the question of what is the difference between HTTP GET and POST). This article tries to explain this, based on my understanding and the Linux documentation. (In this article, we are talking about Linux, or more precisely, Unix systems)</description>
    </item>
    
    <item>
      <title>Linux system UDP packet loss problem analysis ideas</title>
      <link>https://www.sobyte.net/post/2022-05/linux-udp-packet-drop-debug/</link>
      <pubDate>Wed, 04 May 2022 11:31:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/linux-udp-packet-drop-debug/</guid>
      <description>I recently encountered a server application UDP packet loss in my work, and after reviewing a lot of information in the process of troubleshooting, I summarized this article for more people&amp;rsquo;s reference. Before we start, let&amp;rsquo;s use a diagram to explain the process of receiving network messages on a linux system. first, the network message is sent to the NIC(Network Interface Controller) through the physical network cable the network driver</description>
    </item>
    
    <item>
      <title>Guide to using the linux lsof command</title>
      <link>https://www.sobyte.net/post/2022-05/linux-lsof-primer/</link>
      <pubDate>Wed, 04 May 2022 11:21:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/linux-lsof-primer/</guid>
      <description>lsof Introduction lsof is short for list open files, and as the name suggests, its purpose is mainly to list open files on the system. At first glance, it seems to be a very simple command with few scenarios, but it is just another version of ls. But because of the unix philosophy of everything is a file, basically all objects on a *nix system can be considered as objects, and with the various arguments provided by this command, it is actually very powerful and can easily get a lot of very useful information, some of which would be very troublesome with other tools.</description>
    </item>
    
    <item>
      <title>Linux File System</title>
      <link>https://www.sobyte.net/post/2022-05/linux-file-system/</link>
      <pubDate>Mon, 02 May 2022 11:49:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/linux-file-system/</guid>
      <description>Reading and Writing Files Let&amp;rsquo;s start by talking about reading and writing files, and what&amp;rsquo;s going on behind the scenes when we try to write a string of characters to a file, like the following lines of Python code.
1 2 3  f = open(&amp;#34;file.txt&amp;#34;, &amp;#34;w&amp;#34;) f.write(&amp;#34;hello world&amp;#34;) f.close()   With the strace command, it is easy to see which system calls are used behind this line of command.</description>
    </item>
    
    <item>
      <title>Efficient IO Technology - Zero Copy</title>
      <link>https://www.sobyte.net/post/2022-04/zero-copy/</link>
      <pubDate>Tue, 19 Apr 2022 13:22:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/zero-copy/</guid>
      <description>This technique is used for IO operations, which consume a lot of CPU performance. Why IO operations can easily become a performance bottleneck? Every IO operation involves a conversion between the kernel space and user space of the operating system, and the real IO operations are actually performed in the kernel space of the operating system. Whether it is file IO, or network IO, in the end it can be unified as an exchange of user-space and kernel-space data.</description>
    </item>
    
    <item>
      <title>In-depth understanding of netfilter and iptables</title>
      <link>https://www.sobyte.net/post/2022-04/understanding-netfilter-and-iptables/</link>
      <pubDate>Fri, 15 Apr 2022 13:55:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/understanding-netfilter-and-iptables/</guid>
      <description>Netfilter (in conjunction with iptables) enables user-space applications to register the processing rules applied by the kernel network stack when processing packets, enabling efficient network forwarding and filtering. Many common host firewall applications as well as Kubernetes service forwarding are implemented with iptables. Most of the introductory articles on netfilter describe only abstract concepts, but the basic implementation of the kernel code is not too complicated. This article mainly refers</description>
    </item>
    
    <item>
      <title>An analysis of how Linux receives network frames</title>
      <link>https://www.sobyte.net/post/2022-04/linux-process-input-frames/</link>
      <pubDate>Fri, 15 Apr 2022 13:18:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/linux-process-input-frames/</guid>
      <description>This article will introduce how the Linux kernel receives network frames from a beginner&amp;rsquo;s perspective: starting with the reception of the data frame by the NIC device and ending with the frame being passed to the third layer of the network stack. This article will focus on the working mechanism of the kernel and will not go into too many driver-level details. The sample code is taken from Linux 2.6.</description>
    </item>
    
    <item>
      <title>Introduction and practice of eBPF</title>
      <link>https://www.sobyte.net/post/2022-04/ebpf/</link>
      <pubDate>Wed, 13 Apr 2022 13:33:55 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/ebpf/</guid>
      <description>eBPF, derived from BPF, is essentially an efficient and flexible virtual class virtual machine component in the kernel that executes bytecode at many kernel hook points in a secure manner. BPF was originally intended for efficient Originally intended for efficient network message filtering, eBPF has been redesigned and is no longer limited to the network stack, but has become a top-level subsystem of the kernel, evolving into a general-purpose execution</description>
    </item>
    
    <item>
      <title>The difference between nohup, setsid and disown</title>
      <link>https://www.sobyte.net/post/2022-04/linux-nohup-setsid-disown/</link>
      <pubDate>Wed, 13 Apr 2022 13:17:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/linux-nohup-setsid-disown/</guid>
      <description>Both nohup, setsid and disown can be used to allow programs that need to run for a long time to continue running in the background after exiting the terminal. However, they are used differently for this purpose, and therefore have some differences in their use. What happens when you exit the terminal Let&amp;rsquo;s start by looking at what happens when a terminal exits. When a terminal is hung or a</description>
    </item>
    
    <item>
      <title>How do processes in Linux become daemons?</title>
      <link>https://www.sobyte.net/post/2022-04/daemon-process/</link>
      <pubDate>Wed, 13 Apr 2022 13:05:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/daemon-process/</guid>
      <description>This article describes the steps a process born from a Linux shell has to go through to become a daemon process.
A background process, as you can imagine, executes in the background, without a terminal, without a login shell, and processes when certain Events occur, or periodically performs a task. Usually, daemon processes end in d, but it is not required. For example, the daemon processes for Redis and Nginx do not end in d.</description>
    </item>
    
    <item>
      <title>Python web service process management</title>
      <link>https://www.sobyte.net/post/2022-04/web-service-process/</link>
      <pubDate>Tue, 12 Apr 2022 19:04:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/web-service-process/</guid>
      <description>The last step in developing a Web service (or App, as App and Service concepts are equated later) is to start a server to run your App, and in most tutorials, the choices here are usually uwsgi or gunicorn. You&amp;rsquo;ll notice that once it&amp;rsquo;s up and running, it will take up one of your current terminal sessions and go into &amp;ldquo;long run mode&amp;rdquo;, like this. 1 2 3 4 [2020-05-23</description>
    </item>
    
    <item>
      <title>Why do I get the error &#34;Unable to allocate memory&#34; when there is still plenty of memory?</title>
      <link>https://www.sobyte.net/post/2022-04/unable-to-allocate-memory/</link>
      <pubDate>Mon, 11 Apr 2022 22:25:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/unable-to-allocate-memory/</guid>
      <description>Recently, a colleague had a weird problem with his online server, where the error &amp;ldquo;fork:Unable to allocate memory&amp;rdquo; is always reported when executing any command. This problem is a recent one, and it was solved after the first few reboots, but it occurs every 2-3 days. 1 2 3 4 # service docker stop -bash fork: Unable to Allocate Memory # vi 1.txt -bash fork: Unable to Allocate Memory When</description>
    </item>
    
    <item>
      <title>Interface and implementation of io_uring</title>
      <link>https://www.sobyte.net/post/2022-04/io-uring/</link>
      <pubDate>Sat, 09 Apr 2022 22:50:25 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/io-uring/</guid>
      <description>io_uring is an asynchronous I/O interface provided by Linux. io_uring was added to the Linux kernel in 2019, and after two years of development, it has now become very powerful. This article introduces the io_uring interface based on Linux 5.12.10. The implementation of io_uring is mainly in fs/io_uring.c. User State API for io_uring The implementation of io_uring uses only three syscalls: io_uring_setup , io_uring_enter and io_uring_register. They are used to</description>
    </item>
    
    <item>
      <title>Redirection in the Linux Shell</title>
      <link>https://www.sobyte.net/post/2022-04/linux-redirect-in-shell/</link>
      <pubDate>Sat, 09 Apr 2022 17:01:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/linux-redirect-in-shell/</guid>
      <description>I often see other people&amp;rsquo;s shell scripts followed by a 2&amp;gt;&amp;amp;1, and have never bothered to look deeper, so today this topic will be the starting point to expand and learn about the topic of redirection in the linux shell. Special things First, let&amp;rsquo;s look at some special things in linux to lay the groundwork for the rest of the content. Special files /dev/null empty, you can import garbage content</description>
    </item>
    
    <item>
      <title>Learning the SUID mechanism in Linux</title>
      <link>https://www.sobyte.net/post/2022-04/linux-suid/</link>
      <pubDate>Sat, 09 Apr 2022 13:40:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/linux-suid/</guid>
      <description>What is SUID SUID abbreviation bit, the full English name is Set owner User ID up on execution, it is a special file permissions, to enable users (such as Bob) with other users (such as root user) permissions to run a program, without the need to use sudo to temporarily elevate privileges. In the same category there is SGID, so without going into detail, the principle is the same as</description>
    </item>
    
    <item>
      <title>Memory-related fields in the Linux top command</title>
      <link>https://www.sobyte.net/post/2022-04/linux-top-memory/</link>
      <pubDate>Thu, 07 Apr 2022 12:57:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/linux-top-memory/</guid>
      <description>The well-known top command in Linux lists the utilization of system resources by each process. There are several fields VIRT , RES , SHR , CODE , DATA and so on, which describe the memory usage of the processes. (The last two are not displayed by default, you need to press the F key to bring up the relevant fields).
But what do they actually mean?
Documentation for the top command Execute man top to view the top command&amp;rsquo;s manual.</description>
    </item>
    
    <item>
      <title>Mounting/unmounting a disk on Linux</title>
      <link>https://www.sobyte.net/post/2022-04/mount-and-unmount-disk-in-linux/</link>
      <pubDate>Thu, 07 Apr 2022 09:13:48 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-04/mount-and-unmount-disk-in-linux/</guid>
      <description>View the disks on your machine fdisk is a tool used on Linux to manipulate disk partition tables. Using the fdisk -l command, you can list all the disks and their partitions recognized by the system.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  Disk /dev/sda: 599.1 GB, 599051206656 bytes, 1170021888 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 4096 bytes I/O size (minimum/optimal): 262144 bytes / 262144 bytes Disk label type: # masked Disk identifier: # masked Device Boot Start End Blocks Id System /dev/sda1 2048 204802047 102400000 83 Linux /dev/sda2 204802048 213190655 4194304 82 Linux swap / Solaris /dev/sda3 * 213190656 1170020351 478414848 83 Linux Disk /dev/sdb: 6118.</description>
    </item>
    
    <item>
      <title>Process creation in Linux</title>
      <link>https://www.sobyte.net/post/2022-03/process-creation-in-linux/</link>
      <pubDate>Mon, 28 Mar 2022 09:33:43 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/process-creation-in-linux/</guid>
      <description>Regardless of the field, building is often much more difficult than destroying. Building a building may take years, while destroying it may be a matter of seconds. At the root of this, because construction is an entropy-reducing process, there must be an input of energy from outside the system. One type of problem in creation that seems even more special is the problem of origins. How did the first life</description>
    </item>
    
    <item>
      <title>Introduction to Linux TC Flow Control</title>
      <link>https://www.sobyte.net/post/2022-03/linux-tc-flow-control/</link>
      <pubDate>Fri, 25 Mar 2022 09:06:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/linux-tc-flow-control/</guid>
      <description>Some time ago, when doing some tests, I came across Linux tc, because I needed to add a delay to the packets, I used netem in tc. It is very easy to add a simple delay, just one command like this: $ tc qdisc add dev eth0 root netem delay 1s, you don&amp;rsquo;t even need to fully understand the meaning of the parameters in the command . But when you want to do some more specific restrictions, (such as adding delay only to a specific ip port, or adding delay only to inbound traffic), things get a little tricky, and a simple Google search doesn&amp;rsquo;t seem to satisfy the requirements anymore.</description>
    </item>
    
    <item>
      <title>How the Linux kernel is booted</title>
      <link>https://www.sobyte.net/post/2022-03/how-the-linux-kernel-is-booted/</link>
      <pubDate>Thu, 24 Mar 2022 09:43:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-the-linux-kernel-is-booted/</guid>
      <description>This article describes the boot process and the initialization process of the Linux kernel. What happens from the time you press power until you finally log in to the terminal? Note: This article is based on Linux 0.11, and the kernel source code can be downloaded from here. 0.11 is simple enough, but the basic functionality of the kernel is close enough to the current version to make it a</description>
    </item>
    
    <item>
      <title>Nginx&#39;s shared memory management - the slab algorithm</title>
      <link>https://www.sobyte.net/post/2022-03/nginx-slab/</link>
      <pubDate>Thu, 24 Mar 2022 09:23:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/nginx-slab/</guid>
      <description>I first learned about the slab algorithm when I was learning the Linux kernel. The kernel uses the Buddy System algorithm to manage memory pages. But for small objects, it would be wasteful to use a page allocator, so slab was born. The kernel&amp;rsquo;s kmalloc() is managed using slab. nginx&amp;rsquo;s shared memory management uses the same idea, but it is not as complex as slab in the Linux kernel. slab</description>
    </item>
    
    <item>
      <title>In-depth understanding of mmap - kernel code analysis and driver demo examples</title>
      <link>https://www.sobyte.net/post/2022-03/mmap/</link>
      <pubDate>Thu, 24 Mar 2022 09:01:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/mmap/</guid>
      <description>mmap is a very common system call in user space, whether it is allocating memory, reading and writing large files, linking dynamic library files, or sharing memory between multiple processes. This article first introduces the process address space and mmap, then analyzes the kernel code to understand its implementation, and finally deepens the understanding of mmap with a simple demo driver example. Process address space and vma As a pre-knowledge,</description>
    </item>
    
    <item>
      <title>Adding SSH Key Login and Troubleshooting</title>
      <link>https://www.sobyte.net/post/2022-03/add-ssh-key-login-os-and-troubleshooting/</link>
      <pubDate>Sat, 19 Mar 2022 11:14:18 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/add-ssh-key-login-os-and-troubleshooting/</guid>
      <description>1. Steps to add a key 1.1 Client-side generation of ssh key There are two formats of keys:
  The old format, the private key starts with -----BEGIN RSA PRIVATE KEY-----.
1  ssh-keygen -m PEM -t rsa -b 4096 -C &amp;#34;mail@chenshaowen.com&amp;#34;     New format, private key starts with -----BEGIN OPENSSH PRIVATE KEY-----.
1  ssh-keygen -t rsa -b 4096 -C &amp;#34;mail@chenshaowen.com&amp;#34;     Since some older systems do not support the new format of the Key, it is recommended to generate the old format of the Key.</description>
    </item>
    
    <item>
      <title>Replace grep with ripgrep</title>
      <link>https://www.sobyte.net/post/2022-03/ripgrep/</link>
      <pubDate>Fri, 18 Mar 2022 09:31:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/ripgrep/</guid>
      <description>grep is pre-installed on *nix systems and is a tool that programmers often use in their daily work. My recent work involves a lot of large text processing, and grep doesn&amp;rsquo;t work very fast. So I used ripgrep, a tool that runs much faster. This article is mainly excerpts from the use of their usual may be used. Install Just find your corresponding system command in the GitHub Repo guide</description>
    </item>
    
    <item>
      <title>Linux I/O Principles and Zero-copy Technology</title>
      <link>https://www.sobyte.net/post/2022-03/linux-io-and-zero-copy/</link>
      <pubDate>Wed, 16 Mar 2022 21:59:35 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/linux-io-and-zero-copy/</guid>
      <description>Today&amp;rsquo;s network applications have shifted from CPU-intensive to I/O-intensive, and most of the network servers are based on the C-S model, i.e., the Client-Server model, which requires a lot of network communication between the client and the server, which also determines the performance bottleneck of modern network applications: I/O. The standard I/O interface of the traditional Linux operating system is based on data copy operations, i.e. I/O operations result in</description>
    </item>
    
    <item>
      <title>Linux Process Scheduling</title>
      <link>https://www.sobyte.net/post/2022-03/linux-process-scheduling/</link>
      <pubDate>Sun, 13 Mar 2022 11:09:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/linux-process-scheduling/</guid>
      <description>When participating in interviews, Linux processes should be considered a must for me, because many languages don&amp;rsquo;t bother to implement a set of process management and scheduling, but instead borrow directly from the operating system, especially the Python community which sees no need to duplicate the wheel in this area and uses a simple wrapper around system calls. As a result, it&amp;rsquo;s hard to really know what&amp;rsquo;s going to happen to the concurrent code you write if you don&amp;rsquo;t know much about Linux processes.</description>
    </item>
    
    <item>
      <title>Linux Process Management</title>
      <link>https://www.sobyte.net/post/2022-03/linux-process-management/</link>
      <pubDate>Sun, 13 Mar 2022 10:58:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/linux-process-management/</guid>
      <description>It is the essence of an operating system to provide the ability to run programs. And in Linux, light and correspondingly fast process management is one of its good features. In this article, the focus is on the description, and life cycle of Linux processes.
Descriptors and task structures A process is a program in execution and usually includes some resources, such as files, pending signals, internal kernel data, processor state, memory space, and one or more threads of execution.</description>
    </item>
    
    <item>
      <title>Operating system memory virtualization</title>
      <link>https://www.sobyte.net/post/2022-03/memory-virtualization/</link>
      <pubDate>Thu, 10 Mar 2022 13:30:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/memory-virtualization/</guid>
      <description>The program itself doesn&amp;rsquo;t need to care where its data and code live, and memory appears to be contiguous and exclusive to the program. This is certainly not the case, and it is the operating system that is responsible for this - memory virtualization. This article describes how the operating system implements a virtual memory system.
Address Space The operating system provides an easy-to-use abstraction of physical memory: the address space.</description>
    </item>
    
    <item>
      <title>Operating system process scheduling algorithm</title>
      <link>https://www.sobyte.net/post/2022-03/process-scheduling-algorithm/</link>
      <pubDate>Thu, 10 Mar 2022 13:14:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/process-scheduling-algorithm/</guid>
      <description>This article summarizes the process scheduling algorithms of the operating system and analyzes the advantages and disadvantages, including the FIFO algorithm, the shortest task priority algorithm, the rotation algorithm, the multi-level feedback queue algorithm, the lottery scheduling algorithm, and the multi-processor scheduling algorithm. Only the principles of each algorithm are summarized, but not the specific implementation of Linux scheduling algorithms.
Scheduling Metrics Before looking at the process scheduling algorithm, let&amp;rsquo;s see what metrics are followed by the process scheduling algorithm.</description>
    </item>
    
    <item>
      <title>How to troubleshoot problems with systemtap</title>
      <link>https://www.sobyte.net/post/2022-03/how-debug-with-systemtap/</link>
      <pubDate>Wed, 09 Mar 2022 14:16:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-debug-with-systemtap/</guid>
      <description>What is systemtap We generally debug our programs, and the logs printed by the business process are basically sufficient for our needs. If not, using strace, lsof, or perf is enough to see the bottleneck of performance. But for system programming, you can&amp;rsquo;t print logs like crazy, and many call stacks are in kernel space, so ordinary debugging means are stretched to the limit.
At this point systemtap comes in handy, it adds probe probes to kernel functions, aggregates statistics on kernel space function calls, and even intervenes in them.</description>
    </item>
    
    <item>
      <title>The relationship between iptables and the Linux kernel</title>
      <link>https://www.sobyte.net/post/2022-03/relation-between-iptables-and-linux-kernal/</link>
      <pubDate>Mon, 07 Mar 2022 10:34:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/relation-between-iptables-and-linux-kernal/</guid>
      <description>Overview iptables is a basic firewall tool in Linux, and also a very common network workhorse, but iptables is really only an application layer, so how does iptables relate to the Linux kernel network stack, here I will give a brief introduction to this issue.
NetFilter framework The Netfilter framework is a framework provided by the Linux kernel network for applications to register various Handlers, allowing users to control parts of the Linux network through the Netfilter framework.</description>
    </item>
    
    <item>
      <title>New cgroups vulnerability in Linux kernel could elevate user privileges</title>
      <link>https://www.sobyte.net/post/2022-03/linux-kernel-new-cgroups-vulnerability/</link>
      <pubDate>Mon, 07 Mar 2022 10:30:04 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/linux-kernel-new-cgroups-vulnerability/</guid>
      <description>A new cgroups vulnerability, codenamed CVE-2022-0492, which could be abused to evade containers in order to execute arbitrary commands on the container host.
The vulnerability comes from a Linux kernel feature known as cgroups control group, cgroups allows processes to be organized into hierarchical groups so that CPU, memory, and other resource usage, disk I/O, and networking can be limited and monitored.
However, because cgroups lacks internal validation of the release_agent file and fails to properly check whether the process setting the release_agent file has administrative privileges, an attacker can use this cgroups v1 release_agent feature to elevate privileges and accidentally bypass namespace isolation.</description>
    </item>
    
    <item>
      <title>Run the Container using the init processs</title>
      <link>https://www.sobyte.net/post/2022-03/run-the-container-using-the-init-process/</link>
      <pubDate>Sun, 06 Mar 2022 16:58:30 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/run-the-container-using-the-init-process/</guid>
      <description>Anyone who has followed Bare Metal related projects will have seen how the boot process, how to quickly provision a physical server, etc. is implemented, usually with a LiveOS running to achieve certain actions. The Tinkerbell project uses Linuxkit as the LiveOS, and the Plunder project uses BOOTy as the LiveOS. a few days ago @thebsdbox took out a part of BOOTy and showed the main implementation as ginit, so we can better understand the details of the installation.</description>
    </item>
    
    <item>
      <title>Pkill command in Linux</title>
      <link>https://www.sobyte.net/post/2022-03/pkill-command-in-linux/</link>
      <pubDate>Fri, 04 Mar 2022 10:30:01 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/pkill-command-in-linux/</guid>
      <description>This article describes the basics of the Linux pkill command.
pkill is a command-line program that can be sent to a running process based on a specified standard signal. A process can be specified by its full or partial name, the user running the process, or other attributes.
The pkill command is part of the procps (or procps-ng) package, which is pre-installed in almost all Linux distributions. pkill is a wrapper for the pgrep program, which prints a list of matching processes only.</description>
    </item>
    
    <item>
      <title>How to exclude filtered output from Linux Grep</title>
      <link>https://www.sobyte.net/post/2022-03/how-to-exclude-filtered-output-in-linux-grep/</link>
      <pubDate>Tue, 01 Mar 2022 19:31:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-03/how-to-exclude-filtered-output-in-linux-grep/</guid>
      <description>grep is a powerful command line tool for searching one or more input files for lines that match a regular expression and writing each matching line to standard output.
In this tutorial, we will show you how to use grep to filter the output and exclude . This includes excluding lines that don&amp;rsquo;t match, excluding directories and files, etc.
Exclude lines that do not match To print only the lines that do not match the search pattern, use the -v (or -invert-match) option.</description>
    </item>
    
    <item>
      <title>Linux kernel upgrades C language standard</title>
      <link>https://www.sobyte.net/post/2022-02/linux-kernel-to-modern-c/</link>
      <pubDate>Sat, 26 Feb 2022 11:33:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-kernel-to-modern-c/</guid>
      <description>According to news on the Linux kernel mailing list, the community recently discussed whether to adopt the modern C language standard for the kernel.
While the Linux kernel is evolving rapidly, it also relies on some very old tools, one of which is that the kernel code is still using the 1989 version of the C language standard - a standard that was written more than 30 years ago before the kernel project was started.</description>
    </item>
    
    <item>
      <title>How to install and use FFmpeg on Debian 10</title>
      <link>https://www.sobyte.net/post/2022-02/how-to-install-ffmpeg-on-debian-10/</link>
      <pubDate>Fri, 25 Feb 2022 15:51:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-to-install-ffmpeg-on-debian-10/</guid>
      <description>FFmpeg is a free open source toolset for working with multimedia files. It contains a set of shared audio and video libraries such as libavcodec, libavformat and libavutil. Using FFmpeg, you can convert between various video and audio formats, set sample rates, capture streaming audio/video and resize video.
This article describes how to install and use FFmpeg on Debian 10 Linux.
Installing FFmpeg on Debian The official Debian repository contains the FFmpeg package, which can be installed using the apt package manager.</description>
    </item>
    
    <item>
      <title>How to find and kill zombie processes in Linux</title>
      <link>https://www.sobyte.net/post/2022-02/how-to-find-and-kill-zombie-processes-in-linux/</link>
      <pubDate>Fri, 25 Feb 2022 15:39:09 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-to-find-and-kill-zombie-processes-in-linux/</guid>
      <description>Before we get into the Zombie process, let me recall what a process is in Linux.
In short, a process is a program instance. It can be foreground (interactive process) or background (non-interactive or automatic process). It can be a parent process (the creator of other processes at runtime) or a child process (a process created by other processes).
In Linux, every process has a parent process, except for the first init (or systemd) process with a PID of 0.</description>
    </item>
    
    <item>
      <title>How to kill inactive SSH sessions</title>
      <link>https://www.sobyte.net/post/2022-02/how-to-kill-inactive-ssh-sessions/</link>
      <pubDate>Fri, 25 Feb 2022 15:27:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-to-kill-inactive-ssh-sessions/</guid>
      <description>When you have been disconnected from the server several times, causing the ssh session to be inactive. You know this because when you use the &amp;quot; w&amp;quot; command, you will see the following &amp;hellip;&amp;hellip;
1 2 3 4  22:47:28 up 315 days, 21:09, 2 users, load average: 9.04, 8.17, 7.30 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT root pts/0 ipxxx-xxx-xxx-xxx 23:54 26:40 9.26s 0.86s -bash root pts/1 ipxxx-xxx-xxx-xxx 22:44 0.</description>
    </item>
    
    <item>
      <title>Alternatives to htop - btop</title>
      <link>https://www.sobyte.net/post/2022-02/btop/</link>
      <pubDate>Fri, 25 Feb 2022 15:20:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/btop/</guid>
      <description>Meet btop, an aesthetically pleasing system resource monitor that displays processor, memory, disk, network and process usage and statistics. btop is a lighter, faster version of C++, and is a continuation of bashtop and bpytop.
Over the years, the options available for command-line system monitoring tools have grown considerably. There are top, htop, glances, nmon, ytop, gtop, vtop and atop to name a few.
In Linux administration, it is important to monitor system performance and hardware resource usage in real time.</description>
    </item>
    
    <item>
      <title>The difference between free memory and available memory</title>
      <link>https://www.sobyte.net/post/2022-02/free-vs-available-memory-in-linux/</link>
      <pubDate>Fri, 25 Feb 2022 10:19:58 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/free-vs-available-memory-in-linux/</guid>
      <description>Sometimes we need to know exactly how our Linux system is using memory. In this article we will look at how to use the free command line program to see how memory is being used on a Linux system. We will clearly define the difference between free free memory and free memory on a Linux system.
Understanding free memory and available memory What is free memory and how is it different from available memory?</description>
    </item>
    
    <item>
      <title>The seq command in Linux</title>
      <link>https://www.sobyte.net/post/2022-02/seq-command-in-linux/</link>
      <pubDate>Fri, 25 Feb 2022 10:08:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/seq-command-in-linux/</guid>
      <description>The seq command is an abbreviation for sequence and is used to print a sequence of numbers in increasing or decreasing order. In other words, it prints a range of specified values. The numbers can be integers or real numbers with decimal points, or negative numbers. You can also specify the upper or lower limit of the sequence, etc.
In this tutorial, we will explain how to use the seq command and seq common command options, such as printing a sequence of numbers up to the upper limit, printing a specified value between the lower and upper digits, printing a sequence with custom increments, printing a sequence in decreasing or inverted order, printing a sequence with the same number of digits, printing a sequence in a specified format, printing a sequence using a specified separator, and finally we give you a practical application example for your reference.</description>
    </item>
    
    <item>
      <title>Linux Performance: Why you should add swap space</title>
      <link>https://www.sobyte.net/post/2022-02/why-you-should-add-swap-space/</link>
      <pubDate>Thu, 24 Feb 2022 10:20:17 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/why-you-should-add-swap-space/</guid>
      <description>We know that using Linux swap space instead of RAM (memory) can seriously degrade performance. So, one might ask, since I have enough available memory, wouldn&amp;rsquo;t it be better to remove the swap space? The short answer is no. Enabling swap space brings performance benefits, even if you have more than enough RAM.
Even with enough server memory installed, you will often find that you will use swap space after a long period of normal operation.</description>
    </item>
    
    <item>
      <title>How to find all the information about Linux commands like a pro</title>
      <link>https://www.sobyte.net/post/2022-02/finding-a-path-of-a-linux-command/</link>
      <pubDate>Thu, 24 Feb 2022 10:09:10 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/finding-a-path-of-a-linux-command/</guid>
      <description>One of the most common problems encountered by newcomers is how to find the Linux command path that was just installed on Linux using a package manager (e.g. the apt command). There are many developers from the Windows world. Many of them are first time Linux users. Some use Linux with WSL and some deal with cloud servers directly via ssh. Let&amp;rsquo;s look at some common commands to list or</description>
    </item>
    
    <item>
      <title>Linux System Programming -(pthread) Thread Creation and Usage</title>
      <link>https://www.sobyte.net/post/2022-02/linux-pthread/</link>
      <pubDate>Thu, 24 Feb 2022 09:34:02 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-pthread/</guid>
      <description>This article describes the basic use of threads on Linux. 1. Preface Difference between threads and processes (1) Process: It is the smallest unit of OS scheduling. ps, top, etc. commands can be used to view the details of processes under Linux. (2) Thread: It is the smallest unit of process scheduling, each process has a main thread. The main thing to do in the process is the thread. (3)</description>
    </item>
    
    <item>
      <title>Google Research: Linux does a better job than Apple, Google and Microsoft at patching vulnerabilities</title>
      <link>https://www.sobyte.net/post/2022-02/linux-does-a-better-job-of-patching-vulnerabilities/</link>
      <pubDate>Mon, 21 Feb 2022 10:21:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-does-a-better-job-of-patching-vulnerabilities/</guid>
      <description>research from Google&amp;rsquo;s security research team, Project Zero, shows that Linux developers are more effective at fixing security vulnerabilities more quickly than anyone else (including Google).
From 2019 to 2021, Project Zero reported a total of 376 issues to vendors within the standard 90-day period.]351 (93.4%) of these bugs have been fixed, 14 (3.7%) have been flagged by the vendor as WontFix, and 11 (2.9%) remain unfixed. At the time of the bulletin, 8 had sometimes passed their fix deadlines; the remaining 3 were still within their fix deadlines.</description>
    </item>
    
    <item>
      <title>Linux large file splitting and merging</title>
      <link>https://www.sobyte.net/post/2022-02/linux-large-file-splitting-merging/</link>
      <pubDate>Fri, 18 Feb 2022 21:49:49 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-large-file-splitting-merging/</guid>
      <description>1. Splitting files You can use the split command to split files, which supports both text and binary file splitting, and the cat command to merge files.
1.1 Text file splitting When splitting a text file, you can split it by file size or by number of lines of text.
Splitting by file size
When splitting a file by file size, you need to specify the split file size with the -C parameter.</description>
    </item>
    
    <item>
      <title>How to get the thread ID correctly?</title>
      <link>https://www.sobyte.net/post/2022-02/thread-id/</link>
      <pubDate>Tue, 15 Feb 2022 10:31:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/thread-id/</guid>
      <description>How to get the correct thread ID, a seemingly simple question with a hidden catch. Since there are two thread models, user and kernel, there are two ways to get the thread ID. First of all, it is important to understand what POSIX is; a long time ago, when there was no Linux Kernel, Unix was the world of Unix, an open source system, and many developers did various customizations</description>
    </item>
    
    <item>
      <title>How to properly open Linux gui programs in SSH terminal</title>
      <link>https://www.sobyte.net/post/2022-02/how-ssh-terminal-open-linux-gui-program/</link>
      <pubDate>Mon, 14 Feb 2022 10:53:13 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/how-ssh-terminal-open-linux-gui-program/</guid>
      <description>Windows systems use mostly GUI programs, with a few command line programs (such as netstat). Linux, on the other hand, uses mostly command-line programs, but also has gui programs (such as jvisualvm). But sometimes opening a gui program in Linux will report an error, and sometimes there is no problem. This article explores what the X Window System is and how to properly open Linux gui programs in ssh terminal.</description>
    </item>
    
    <item>
      <title>Detailed breakdown of the Kafka architecture</title>
      <link>https://www.sobyte.net/post/2022-02/kafka-architecture/</link>
      <pubDate>Sun, 13 Feb 2022 12:21:57 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/kafka-architecture/</guid>
      <description>Basic Concepts Kafka Architecture The Kafka architecture consists of a number of Producers, a number of Brokers, a number of Consumers, and a ZooKeeper cluster. There are two other concepts that are particularly important in Kafka - Topic and Partition. Messages in Kafka are grouped by topic, producers are responsible for sending messages to a specific topic (each message sent to a Kafka cluster is assigned a topic), and consumers</description>
    </item>
    
    <item>
      <title>Linux file system and file caching knowledge collation</title>
      <link>https://www.sobyte.net/post/2022-02/linux-file-system-and-file-caching/</link>
      <pubDate>Sun, 13 Feb 2022 11:45:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-file-system-and-file-caching/</guid>
      <description>File system of Linux Characteristics of the file system  The file system has to be strictly organized so that files can be stored in blocks. The file system should also have indexed areas to make it easy to find out where the multiple blocks of a file are stored. the file system should have a cache layer if there are files that are hot files and have been read and written to frequently in the recent past.</description>
    </item>
    
    <item>
      <title>Does the original TCP connection still exist after disconnecting the network cable?</title>
      <link>https://www.sobyte.net/post/2022-02/tcp-connection/</link>
      <pubDate>Sun, 13 Feb 2022 11:08:23 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/tcp-connection/</guid>
      <description>Today, let&amp;rsquo;s talk about an interesting question: Unplug the cable for a few seconds, then plug it back in, does the original TCP connection still exist?
Some people may say that if the cable is unplugged, it means the physical layer is disconnected, so the upper transport layer should also be disconnected, so the original TCP connection will not exist. Just like when we make a wired phone call, if one party&amp;rsquo;s phone line is unplugged, the call is completely disconnected.</description>
    </item>
    
    <item>
      <title>Linux Thread Local Storage</title>
      <link>https://www.sobyte.net/post/2022-02/linux-thread-local-storage/</link>
      <pubDate>Fri, 11 Feb 2022 10:55:15 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/linux-thread-local-storage/</guid>
      <description>In C/C++ programs, global variables are shared by all threads by default, and developers need to deal with multi-threaded competition. There are cases where we need to make sure that one thread has an exclusive share of the data and that other threads cannot access it. A typical case is the errno global variable, which always stores the error code of the last call of the current thread, without thread</description>
    </item>
    
    <item>
      <title>Debugging Linux kernels with Qemu and GDB</title>
      <link>https://www.sobyte.net/post/2022-02/debug-linux-kernel-with-qemu-and-gdb/</link>
      <pubDate>Thu, 10 Feb 2022 09:46:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/debug-linux-kernel-with-qemu-and-gdb/</guid>
      <description>Using Qemu to debug the Linux kernel is a convenient way, so I recently did some practice and documented the general steps and some of the pitfalls. Environment Since I am at home on a long vacation, I only have a MBP with MacOS available, and it is easier to develop and debug Linux kernel in a Linux environment, so I created a virtual machine with Ubuntu 18.04 installed using</description>
    </item>
    
    <item>
      <title>Does anyone remember the ideal and proud BSD before Linux?</title>
      <link>https://www.sobyte.net/post/2022-02/bsd-linux/</link>
      <pubDate>Wed, 09 Feb 2022 10:34:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/bsd-linux/</guid>
      <description>What would the world be like without Linux?
More than twenty years ago, Linus Torvalds, the father of Linux, said, &amp;ldquo;If 386BSD had been available before I created Linux, then Linux might not have been born.&amp;rdquo;
Later, when people look back and reflect, there is no shortage of people who think: &amp;ldquo;If Linux had not flourished, FreeBSD would have filled the void today.&amp;rdquo;
BSD (Berkeley Software Distribution, also known as Berkeley Unix), the most inextricable offshoot of Unix, had its cradle at the University of California, Berkeley, the most radical leftist stronghold in the United States at the time.</description>
    </item>
    
    <item>
      <title>AMD has developed a &#34;PAN&#34; feature that helps improve Linux performance</title>
      <link>https://www.sobyte.net/post/2022-02/amd-pan-linux-rfc/</link>
      <pubDate>Tue, 01 Feb 2022 14:53:11 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-02/amd-pan-linux-rfc/</guid>
      <description>AMD open source engineers have come up with a new kernel feature called &amp;ldquo;PAN&amp;rdquo; (Process Adaptive autoNUMA), and early data shown by AMD suggests that PAN can help improve the performance of certain workloads on its latest server hardware to some extent.
PAN is an adaptive algorithm for calculating AutoNUMA scan periods, as further explained by Bharata B Rao of AMD in the Request for Comments (RFC) Linux Kernel Patch Series:</description>
    </item>
    
    <item>
      <title>&#34;I Deleted Linux&#34;, Linus Releases Prank README Using GitHub Vulnerability</title>
      <link>https://www.sobyte.net/post/2022-01/linus-play-a-trick-of-github-vulnerability/</link>
      <pubDate>Thu, 27 Jan 2022 19:02:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linus-play-a-trick-of-github-vulnerability/</guid>
      <description>On January 25, Linus Torvalds submitted a prank README page to the Linux GitHub repository with a note called &amp;ldquo;delete linux because it sucks&amp;rdquo;.
 hey guys its me linus torvalds, author of the smash hit linux. yes its me you can look at the url of the repo and the thingy at the top of the files it proves its 100% me.
i deleted linux because i hate it now i think it sucks.</description>
    </item>
    
    <item>
      <title>Vulnerability over 12 years old, affecting all major Linux distributions</title>
      <link>https://www.sobyte.net/post/2022-01/pwnkit-local-privilege-escalation-vulnerability/</link>
      <pubDate>Thu, 27 Jan 2022 09:20:45 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/pwnkit-local-privilege-escalation-vulnerability/</guid>
      <description>A research team at cybersecurity firm Qualys has discovered a memory corruption vulnerability, &amp;ldquo;PwnKit,&amp;rdquo; in polkit&amp;rsquo;s pkexec that makes all major Linux distributions vulnerable to local elevation of authority (LPE) attacks.
According to the introduction, Polkit (formerly known as PolicyKit) is a component used to control system-wide privileges in Unix-like operating systems, providing a mechanism for unprivileged processes to communicate with privileged processes. pkexec is a SUID-root program that is installed on every major Linux distribution by default.</description>
    </item>
    
    <item>
      <title>Using Perf for program hotspot analysis</title>
      <link>https://www.sobyte.net/post/2022-01/use-perf/</link>
      <pubDate>Thu, 20 Jan 2022 10:46:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/use-perf/</guid>
      <description>Perf is a performance analysis tool that has been added to the kernel since Linux 2.6.31 (2009). It uses kernel runtime staking to detect the running of programs and can provide quite rich information, enough to find performance bottlenecks and optimisation priorities in the running of programs. Installation On some systems there may be a full Perf pre-installed, but on the Debian Buster (10) I am using, only the user</description>
    </item>
    
    <item>
      <title>Implementation of the Linux kernel CFS scheduler</title>
      <link>https://www.sobyte.net/post/2022-01/linux-cfs/</link>
      <pubDate>Thu, 20 Jan 2022 10:39:54 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-cfs/</guid>
      <description>This article provides an easy and quick introduction to the principles and implementation of the CFS scheduler, a fully fair class scheduling class in the Linux kernel.
Principle The core principle of the CFS (Completely Fair Scheduler) is simple: each process is given as &amp;ldquo;fair&amp;rdquo; a runtime as possible. So the process that has run the least in the past is chosen to run each time. Of course, as a scheduler, it has to meet much more than that, and a number of features such as Linux&amp;rsquo;s preemptive processes and support for priorities in the Completely Fair class fair_sched_class make the design of CFS much more complex than simply picking the least amount of runtime.</description>
    </item>
    
    <item>
      <title>Linux kernel page replacement algorithms</title>
      <link>https://www.sobyte.net/post/2022-01/linux-multi-lru/</link>
      <pubDate>Wed, 19 Jan 2022 10:13:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-multi-lru/</guid>
      <description>Previously, Yu Zhao from Google submitted a Patch to the Linux kernel that modified the page swap algorithm in the kernel memory management module, proposing a multi-level LRU. This article takes you through the advantages of the page swap algorithm and multi-level LRU.
What are pages and page replacement We know that memory paging mechanisms are used on almost all modern operating systems and processors. In some embedded operating systems and in special cases where processor resources are tight and there is no need to consider inter-process safety, or even the concept of threads, memory paging is not necessary.</description>
    </item>
    
    <item>
      <title>Linux malware on the rise: XorDDoS, Mirai and Mozi most popular</title>
      <link>https://www.sobyte.net/post/2022-01/linux-targeted-malware-increased-2021/</link>
      <pubDate>Wed, 19 Jan 2022 09:27:40 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-targeted-malware-increased-2021/</guid>
      <description>Linux powers most of today&amp;rsquo;s cloud infrastructure and web servers, as well as mobile and IoT devices. In a newly released report, security firm CrowdStrike notes that malware targeting Linux-based operating systems typically deployed in Internet of Things (IoT) devices increases by 35 percent in 2021 compared to 2020, with the top three malware families accounting for 22 percent of all Linux-based IoT malware in 2021.
 35% increase in malware targeting Linux systems in 2021 compared to 2020 XorDDoS, Mirai and Mozi malware families account for more than 22% of the threats targeting Linux observed by CrowdStrike in 2021 10x increase in the number of Mozi malware samples observed in 2021 compared to 2020  XorDDoS, Mirai and Mozi are the most prevalent Linux-based malware families observed by CrowdStrike in 2021.</description>
    </item>
    
    <item>
      <title>3 ways to check the Linux kernel version from the command line</title>
      <link>https://www.sobyte.net/post/2022-01/3-ways-how-to-check-the-linux-kernel-version-in-the-command-line/</link>
      <pubDate>Tue, 18 Jan 2022 13:20:50 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/3-ways-how-to-check-the-linux-kernel-version-in-the-command-line/</guid>
      <description>When you are debugging drivers like you do, you may want to know which Linux kernel version your system is using? Here are three ways to check the kernel version in the Linux terminal.
I am using Ubuntu at the time of writing this article, but these commands are generic and can be used on Fedora, Debian, CentOS, SUSE Linux or any other Linux distribution.
Using the uname command to find the Linux kernel version uname is a Linux command used to get information about your system.</description>
    </item>
    
    <item>
      <title>Linux kernel 2021: Linus Torvalds most prolific, commit count down to 73.7k</title>
      <link>https://www.sobyte.net/post/2022-01/linux-kernel-2021-highlights/</link>
      <pubDate>Mon, 17 Jan 2022 13:44:28 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-kernel-2021-highlights/</guid>
      <description>2021 saw the consolidation of a number of kernel improvements, the introduction of new hardware support and much more. But while the year looks good for movement in the Linux kernel, the actual number of commits and lines is lower than ever.
The tech site phoronix has summarized the relevant 2021 Git development statistics. As of December 31, 2021, when running GitStats on the Linux kernel source tree, the repository had received 1,060,172 commits from about 243,000 different authors.</description>
    </item>
    
    <item>
      <title>What should I do if my Linux process is stuck?</title>
      <link>https://www.sobyte.net/post/2022-01/linux-process-stuck/</link>
      <pubDate>Fri, 14 Jan 2022 09:53:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-process-stuck/</guid>
      <description>When we are using Linux, if there is a problem with network or disk I/O, we may find that the process is stuck, even if we use kill -9, we cannot kill the process, and many common debugging tools such as strace, pstack, etc. are not working.
At this point, we use ps to view the list of processes and see that the status of the stuck process is shown as D.</description>
    </item>
    
    <item>
      <title>Systemd common operations and configuration</title>
      <link>https://www.sobyte.net/post/2022-01/systemd/</link>
      <pubDate>Thu, 13 Jan 2022 13:00:27 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/systemd/</guid>
      <description>Most Linux distributions are now managed by systemd, which is becoming more and more complex, but there are only so many common operations, so today I will talk about my own common operations and configuration. Operation daemon-reload When adding a new service to a system, it is common to keep changing the test.service configuration file. After changing the configuration file, it is usually necessary to run systemctl daemon-reload to re-add</description>
    </item>
    
    <item>
      <title>Linux audit buffer configuration</title>
      <link>https://www.sobyte.net/post/2022-01/linux-audit-buffer/</link>
      <pubDate>Tue, 11 Jan 2022 14:00:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-audit-buffer/</guid>
      <description>Recently, I encountered a case where a host was in a hung state, and the IPMI console of the host at that time showed the log: audit: backlog limit exceeded, and for some reasons, the NMI signal was not sent in time to trigger the kernel core dump, so I could only troubleshoot according to the existing information, and recorded the following audit buffer related configuration learning.
Audit The Linux kernel introduced audit in 2.</description>
    </item>
    
    <item>
      <title>io_uring Reading Notes</title>
      <link>https://www.sobyte.net/post/2022-01/io-uring/</link>
      <pubDate>Sun, 09 Jan 2022 10:26:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/io-uring/</guid>
      <description>io_uring in a nutshell There are two important operations for asynchronous requests for io_uring: committing the request, and completing the submitted request. For IO event submission, the application is the producer and the kernel is the consumer, while for completion events, the kernel is the producer and the application is the consumer. Therefore, we need a pair of rings to provide a high-performance channel for communication between the kernel and</description>
    </item>
    
    <item>
      <title>The Swiss Army knife of Linux networking tools - socat &amp; netcat</title>
      <link>https://www.sobyte.net/post/2022-01/socat-netcat/</link>
      <pubDate>Sat, 08 Jan 2022 14:27:07 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/socat-netcat/</guid>
      <description>The commands in this article were tested on macOS Big Sur and Opensuse Tumbleweed socat &amp;amp; netcat netcat (network cat) is a long-established network toolkit, known as the Swiss Army knife of TCP/IP. All major Linux distributions have the openbsd version of netcat installed by default, and its command line name is nc . And socat (socket cat), which is officially described as &amp;quot;netcat++&amp;quot; (extended design, new implementation), is a</description>
    </item>
    
    <item>
      <title>Virtual Network Interface in Linux</title>
      <link>https://www.sobyte.net/post/2022-01/linux-virtual-network-interfaces/</link>
      <pubDate>Sat, 08 Jan 2022 14:07:16 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/linux-virtual-network-interfaces/</guid>
      <description>Note: Any network configuration created or modified with the ip command in this article is not persistent and disappears upon host reboot. Linux has powerful virtual networking capabilities, which are the basis for virtual networks such as openstack networks, docker container networks, and kubernetes networks. Here are the most common types of virtual network interfaces for Linux: TUN/TAP, bridge, veth, ipvlan/macvlan, vlan, and vxlan/geneve. I. tun/tap Virtual Network Interface tun/tap</description>
    </item>
    
    <item>
      <title>The difference between Ctrl&#43;C and Kill to kill a process</title>
      <link>https://www.sobyte.net/post/2022-01/different-from-ctrl-c-and-kill/</link>
      <pubDate>Sat, 08 Jan 2022 13:44:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/different-from-ctrl-c-and-kill/</guid>
      <description>On linux systems, you can kill processes by typing &amp;lt;Ctrl+C&amp;gt; in bash or by using the command kill -9 $pid, but they are very different.
Let&amp;rsquo;s put the conclusion first: kill command will only kill the target process, while bash shortcut will kill the whole foreground process group!
linux process killing methods Regardless of the method used, killing processes is done by sending a signal. The kill command actually sends a signal to the target pid process.</description>
    </item>
    
    <item>
      <title>Origin of Linux tty</title>
      <link>https://www.sobyte.net/post/2022-01/origin-of-linux-tty/</link>
      <pubDate>Sat, 01 Jan 2022 14:45:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-01/origin-of-linux-tty/</guid>
      <description>From UNIX to Linux, you&amp;rsquo;ve heard the term &amp;ldquo;TTY&amp;rdquo;. As a desktop user, you should be using it and you use it a lot. In the tutorial, let me mention everything necessary to get you familiar with the term TTY in Linux. Please note that there is no clear answer to this, but it has to do with the way input/output devices used to interact. Therefore, you must know some history to get a clear understanding.</description>
    </item>
    
    <item>
      <title>Stuck problems caused by soft links</title>
      <link>https://www.sobyte.net/post/2021-12/symlink_metadata/</link>
      <pubDate>Sat, 25 Dec 2021 21:02:22 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/symlink_metadata/</guid>
      <description>fs::symlink_metadata Recently I wrote a program to recursively search for folder statistics and got stuck when measuring the size of a folder I used find -type l to search for soft links and found two links referenced recursively: a points to b&amp;rsquo;s folder while b points to a&amp;rsquo;s folder Looking at the source code, I realized that the underlying std::fs::metadata call stat() system call would follow the link I switched</description>
    </item>
    
    <item>
      <title>Why Linux needs virtual memory</title>
      <link>https://www.sobyte.net/post/2021-12/whys-the-design-os-virtual-memory/</link>
      <pubDate>Sat, 04 Dec 2021 11:11:34 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/whys-the-design-os-virtual-memory/</guid>
      <description>CPU and Main memory are scarce resources in an operating system. All processes running in the current operating system share the CPU and memory resources in the system, and the operating system uses CPU scheduler to allocate CPU time and introduces virtual memory system to manage physical memory.
Before we can answer the need for virtual memory, we need to understand what virtual memory is in an operating system and what role it plays in the operating system.</description>
    </item>
    
    <item>
      <title>Why system calls consume more resources</title>
      <link>https://www.sobyte.net/post/2021-12/whys-the-design-syscall-overhead/</link>
      <pubDate>Wed, 01 Dec 2021 15:53:56 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/whys-the-design-syscall-overhead/</guid>
      <description>A system call is a way for a computer program to request services from the operating system kernel during execution. This may include hardware-related services, the creation and execution of new processes, and process scheduling. Anyone with a little knowledge of operating systems knows that - system calls provide the user program with an interface to the operating system.
The famous glibc for C language encapsulates the system calls provided by the operating system and provides a well-defined interface that allows engineers to develop upper-level applications directly using the functions encapsulated in the container.</description>
    </item>
    
    <item>
      <title>Why is the default page size for Linux 4KB?</title>
      <link>https://www.sobyte.net/post/2021-12/whys-the-design-linux-default-page/</link>
      <pubDate>Wed, 01 Dec 2021 15:45:03 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-12/whys-the-design-linux-default-page/</guid>
      <description>We all know that Linux manages memory in pages. Whether it is loading data from disk into memory or writing data from memory back to disk, the operating system operates in pages. Even if we write only one byte of data to disk, we need to swipe the entire data from the entire page to disk.
Linux supports both normal-sized memory pages and large memory pages (Huge Page). The default size of memory pages on most processors is 4KB, and although some processors use 8KB, 16KB, or 64KB as the default page size, 4KB pages are still the mainstream of the default memory page configuration of the operating system; in addition to the normal memory page size, different processors also contain large pages of different sizes.</description>
    </item>
    
    <item>
      <title>Why HugePages can improve database performance</title>
      <link>https://www.sobyte.net/post/2021-11/whys-the-design-linux-hugepages/</link>
      <pubDate>Mon, 29 Nov 2021 15:07:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/whys-the-design-linux-hugepages/</guid>
      <description>Memory is an important resource for computers, and while most services today do not require as much memory, databases and Hadoop services are big consumers of memory, consuming GBs and TBs of memory to speed up computations in production environments.
The Linux operating system has introduced a number of strategies to manage this memory better and faster and reduce overhead, and today we are going to introduce HugePages, or large pages.</description>
    </item>
    
    <item>
      <title>Why Linux needs Swapping</title>
      <link>https://www.sobyte.net/post/2021-11/whys-the-design-linux-swapping/</link>
      <pubDate>Mon, 29 Nov 2021 14:57:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/whys-the-design-linux-swapping/</guid>
      <description>Anyone who knows a little bit about Linux knows that Linux divides the physical Random Access Memory (RAM) into 4KB-sized memory blocks by page, and the Swapping mechanism we are going to introduce today is closely related to memory, which is the process of the operating system copying the contents of physical memory pages to the swap space on the hard disk to release the memory. The physical memory and the swap partition on the hard disk make up the virtual memory available on the operating system, and these swap spaces are pre-configured by the system administrator.</description>
    </item>
    
    <item>
      <title>Why Linux and macOS don&#39;t need defragmentation</title>
      <link>https://www.sobyte.net/post/2021-11/whys-the-design-linux-macos-fragmentation/</link>
      <pubDate>Thu, 25 Nov 2021 18:55:06 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/whys-the-design-linux-macos-fragmentation/</guid>
      <description>I believe that many software engineers today use Linux or macOS systems, and unlike Windows, we hardly see the concept of disk defragmentation. From personal experience, the author has not defragmented a disk in macOS for the past seven or eight years, and you won&amp;rsquo;t find any related operations in today&amp;rsquo;s disk tools, only the diskutil command to set whether a disk is defragmented on or off.
Windows operating systems may need to defragment their disks every once in a while, and there are two reasons behind this problem: one is that Windows uses a very simple file system called FAT, which is designed in such a way that the same files may be scattered in different locations on the disk, and the other is that solid state drives were not popular in the ancient times and mechanical hard drives have poor random read and write performance.</description>
    </item>
    
    <item>
      <title>Linux installation of swap swap partition size setting</title>
      <link>https://www.sobyte.net/post/2021-11/linux-swap/</link>
      <pubDate>Thu, 25 Nov 2021 18:48:31 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/linux-swap/</guid>
      <description>Swap in Linux is similar to virtual memory in Windows, which means that when there is a shortage of memory, a portion of the hard disk space can be used as virtual memory, thus solving the problem of insufficient memory capacity.
When installing a Linux system you need to set up a separate swap partition while Windows installation does not have this requirement, mainly because of the different ways of implementation.</description>
    </item>
    
    <item>
      <title>Compressing and decompressing files under Linux</title>
      <link>https://www.sobyte.net/post/2021-11/the-compress-and-decompress-method-of-linux-system/</link>
      <pubDate>Thu, 18 Nov 2021 22:58:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/the-compress-and-decompress-method-of-linux-system/</guid>
      <description>Compressing and decompressing files under Linux is quite different from the Windows environment. Under Windows, you only need to install a tool like Winrar to decompress most files, while under Linux command line there are different compression and decompression methods for each kind of file. Common Linux compression and decompression commands Using tar to package files The most common packaging program under Linux is tar (note that tar is packaging,</description>
    </item>
    
    <item>
      <title>Installation and use of FFM/libffm on Windows/Linux</title>
      <link>https://www.sobyte.net/post/2021-11/ffm-libffm-windows/</link>
      <pubDate>Sun, 14 Nov 2021 12:07:24 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/ffm-libffm-windows/</guid>
      <description>Yu-Chin Juan, the author of FFM, has open-sourced the C++ version of the code libffm on GitHub. Since the daily data processing is in a Python environment, expect to find a Python version of FFM. Related projects on Github There are many on Github, such as this one: A Python wrapper for LibFFM. Installation of libffm in Windows+Anaconda environment Installation of libffm-python package The project is installed on Windows as</description>
    </item>
    
    <item>
      <title>Linux system boot speed optimization tool systemd-analyze</title>
      <link>https://www.sobyte.net/post/2021-11/systemd-analyze/</link>
      <pubDate>Sun, 14 Nov 2021 12:03:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/systemd-analyze/</guid>
      <description>Introduction to systemd-analyze systemd-analyze is a tool that comes with Linux to analyze system boot performance.
Commands available for systemd-analyze.
 systemd-analyze [OPTIONS&amp;hellip;] [time] systemd-analyze [OPTIONS&amp;hellip;] blame systemd-analyze [OPTIONS&amp;hellip;] critical-chain [UNIT&amp;hellip;] * systemd-analyze [OPTIONS&amp;hellip;] critical-chain [UNIT&amp;hellip; systemd-analyze [OPTIONS&amp;hellip;] plot [&amp;gt; file.svg] systemd-analyze [OPTIONS&amp;hellip;] dot [PATTERN&amp;hellip;] [&amp;gt; file.dot] systemd-analyze [OPTIONS&amp;hellip;] dump systemd-analyze [OPTIONS&amp;hellip;] set-log-level LEVEL systemd-analyze [OPTIONS&amp;hellip;] set-log-target TARGET systemd-analyze [OPTIONS&amp;hellip;] get-log-level systemd-analyze [OPTIONS&amp;hellip;] get-log-target systemd-analyze [OPTIONS&amp;hellip;] syscall-filter [SET&amp;hellip;] systemd-analyze [OPTIONS&amp;hellip;] verify [FILES&amp;hellip;]  The systemd-analyze command means.</description>
    </item>
    
    <item>
      <title>Linux Timed Tasks Crontab</title>
      <link>https://www.sobyte.net/post/2021-11/crontab/</link>
      <pubDate>Sun, 14 Nov 2021 12:00:26 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/crontab/</guid>
      <description>crond is a daemon process used under linux to periodically perform certain tasks or wait for certain events to be processed, similar to the scheduled tasks under windows, when the installation of the operating system is complete, this service tool will be installed by default and will automatically start the crond process, the crond process will periodically check every minute if there is a task to be performed, and if there is a task to be performed, the task will be automatically executed.</description>
    </item>
    
    <item>
      <title>Linux Firewall FirewallD and iptables</title>
      <link>https://www.sobyte.net/post/2021-11/firewalld/</link>
      <pubDate>Sun, 14 Nov 2021 11:50:38 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/firewalld/</guid>
      <description>CentOS 7.0 has replaced the original firewall iptables with FirewallD, which supports IPv4, IPv6 firewall settings and Ethernet bridging, and has both runtime and permanent configuration options, and is called a dynamically managed firewall, meaning that changes can be applied without restarting the entire firewall. firewalld is installed by default, if not, execute yum install firewalld firewalld-config to install it, where firewalld-config is a GUI tool. netfilter iptables, firewalld, and</description>
    </item>
    
    <item>
      <title>Linux software installation commands, CMMI process</title>
      <link>https://www.sobyte.net/post/2021-11/linux-configure-make-make-install/</link>
      <pubDate>Sat, 13 Nov 2021 13:26:39 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/linux-configure-make-make-install/</guid>
      <description>In the process of installing and compiling Linux software on your own, three steps are performed: /configure,make,make install. /What exactly do these three steps do in the installation process, which has previously been confusing, and today we will learn together.
. /configure(configure) configure generates a makefile file based on the current system environment and specified parameters to prepare for the next compilation step. You can control the installation by adding parameters to configure, such as the code: .</description>
    </item>
    
    <item>
      <title>Linux terminal file types and colors</title>
      <link>https://www.sobyte.net/post/2021-11/linux-file-colors/</link>
      <pubDate>Sat, 13 Nov 2021 13:22:51 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/linux-file-colors/</guid>
      <description>When using the ls command, you can find different types of files with different colors, what specific types of files does each color represent? Let&amp;rsquo;s learn together today.
By default, specific configuration information is available at the command line by typing dircolors.
1 2 3  [root@localhost ~]# dircolors LS_COLORS=&amp;#39;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:&amp;#39;; export LS_COLORS   The configuration information (rs, di, ln, etc.) corresponds to different different types of files with the following common contents.</description>
    </item>
    
    <item>
      <title>Manjaro Linux installation and use</title>
      <link>https://www.sobyte.net/post/2021-11/install-manjaro-linux/</link>
      <pubDate>Wed, 10 Nov 2021 20:52:52 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/install-manjaro-linux/</guid>
      <description>What is Manjaro? Manjaro, simply put, is an Arch Linux-based distribution. Manjaro&amp;rsquo;s goal is to make the powerful Arch more user-friendly, such as the installation process. Compared to Arch Linux installation where you have to use the command line for partitioning, mounting partitions, network card settings, etc., it directly provides a graphical installation interface similar to other Linux distributions and has some common settings already pre-configured, including some hardware drivers</description>
    </item>
    
    <item>
      <title>Linux terminal/graphic interface and desktop environment</title>
      <link>https://www.sobyte.net/post/2021-11/linux-desktop-environment/</link>
      <pubDate>Mon, 08 Nov 2021 12:59:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/linux-desktop-environment/</guid>
      <description>Command Line Interface (CLI), Terminal, Shell, TTY Command Line Interface (CLI) Command line interface, in layman&amp;rsquo;s terms, is the kind of interface that you have seen with characters all over the screen. Command line interface (English: Command-line Interface, abbreviation: CLI) is the most widely used user interface before the popularity of graphical user interface, it usually does not support the mouse, the user through the keyboard input commands, the computer receives the command, to be executed.</description>
    </item>
    
    <item>
      <title>Linux file permissions viewing and modification</title>
      <link>https://www.sobyte.net/post/2021-11/linux-file-permission/</link>
      <pubDate>Sun, 07 Nov 2021 13:15:59 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/linux-file-permission/</guid>
      <description>Linux is a multi-user, multi-tasking system, often with multiple people working on a single machine at the same time. To protect everyone&amp;rsquo;s privacy, the role of &amp;ldquo;file owner&amp;rdquo; is quite important. When a Linux user logs on to the system, he or she carries a User ID (UID) and a Group ID (GID), which are equivalent to his or her business cards. When you need to access a file or</description>
    </item>
    
    <item>
      <title>Linux Package Management System</title>
      <link>https://www.sobyte.net/post/2021-11/linux-package-management/</link>
      <pubDate>Sun, 07 Nov 2021 13:06:42 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/linux-package-management/</guid>
      <description>Introduction to Package Management Systems There was a time when software was distributed via FTP or mailing lists (i.e., patch packages with source code distributed via mailing lists) (eventually these distribution methods evolved, thanks to the rapid growth of the Internet, into one of the common software distribution sites of today). （There is only one very small file (usually in a tar file) that contains</description>
    </item>
    
    <item>
      <title>Linux user and user group management</title>
      <link>https://www.sobyte.net/post/2021-11/linux-users-and-groups/</link>
      <pubDate>Sun, 07 Nov 2021 12:56:12 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/linux-users-and-groups/</guid>
      <description>There are only two levels of Linux users: root and non-root, and some users in Linux, such as apache, mysql, nobody, ftp, etc., are also non-root users, i.e. normal users. And these illusions are caused by another concept: user groups A user must belong to at least one user group A user can belong to more than one user group The reason for the existence of user groups is still</description>
    </item>
    
    <item>
      <title>How to choose a Linux distribution for your desktop/server</title>
      <link>https://www.sobyte.net/post/2021-11/linux-distribution/</link>
      <pubDate>Wed, 03 Nov 2021 13:25:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-11/linux-distribution/</guid>
      <description>Linux is a pre-integrated Linux operating system and various application software for the average user. Linux distributions usually contain applications including desktop environments, office packages, media players, databases, etc. These operating systems usually consist of the Linux kernel, as well as a large library of functions from the GNU Project, and an X Window-based graphical interface. Some distributions do not come with X Window pre-installed due to capacity size, and</description>
    </item>
    
    <item>
      <title>Linux/Windows/Mac OS file systems</title>
      <link>https://www.sobyte.net/post/2021-10/linux-windows-mac-os-file_systems/</link>
      <pubDate>Sat, 30 Oct 2021 13:21:32 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/linux-windows-mac-os-file_systems/</guid>
      <description>A computer&amp;rsquo;s file system is a method of storing and organizing computer data, which makes it easy to access and find. A file system uses the abstract logical concept of files and tree directories instead of using the concept of data blocks for physical devices such as hard disks and CD-ROMs, so that users using a file system to save data do not have to care about how much data is actually saved on the hard disk (or CD-ROM) at the address of the data block, but only need to You only need to remember the directory and file name of the file.</description>
    </item>
    
    <item>
      <title>Understanding Linux network namespaces</title>
      <link>https://www.sobyte.net/post/2021-10/learn-linux-net-namespace/</link>
      <pubDate>Sun, 10 Oct 2021 13:07:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-10/learn-linux-net-namespace/</guid>
      <description>In this article I will demonstrate how to use the command to connect processes in different subnets of the network namespace through a pair of veth interfaces. Network Namespaces We know that the container runtime uses the namespace (namespace) kernel function to partition system resources for some form of process isolation, so that changes to resources in one namespace do not affect resources in other namespaces, including process IDs, host</description>
    </item>
    
    <item>
      <title>Linux celebrates its birthday with a review of 30 milestones</title>
      <link>https://www.sobyte.net/post/2021-08/linux-is-30-years-old/</link>
      <pubDate>Thu, 26 Aug 2021 20:51:20 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/linux-is-30-years-old/</guid>
      <description>Linux is launched and its origins are a small personal project On 25 August 2021, the 30th birthday of Linux, 30 years ago, Linus Torvalds (hereinafter Linus), a 21-year-old student at university in Helsinki, made a post on Minix Useneg, announcing for the first time that he had made a free operating system called Linux.
&amp;ldquo;I&amp;rsquo;m making a free operating system, just a hobby, not as big and professional as GNU&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Linux on Apple M1 now boots to GNOME desktop</title>
      <link>https://www.sobyte.net/post/2021-08/linux-apple-m1-boots-gnome/</link>
      <pubDate>Tue, 24 Aug 2021 10:58:46 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/linux-apple-m1-boots-gnome/</guid>
      <description>Alyssa Rosenzweig, one of the Asahi Linux developers working on porting Linux to the Apple M1, recently shared a milestone on her social media platforms: namely, that she successfully booted the Debian distribution on an Apple M1 device and into the GNOME Shell desktop environment.
It is worth noting, however, that OpenGL graphics acceleration is not yet supported. The experience currently relies solely on LLVMpipe, a software implementation of Mesa Gallium3D for accelerating OpenGL on the CPU, to achieve the OpenGL acceleration required by the GNOME desktop.</description>
    </item>
    
    <item>
      <title>Linux Foundation Welcomes New &#34;Member&#34;, eBPF Foundation Formed</title>
      <link>https://www.sobyte.net/post/2021-08/new-member-ebpf-foundation-formed/</link>
      <pubDate>Thu, 19 Aug 2021 16:57:19 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/new-member-ebpf-foundation-formed/</guid>
      <description>On August 12, 2021 EST, Google, Microsoft, Isovalent, Facebook, and Netflix jointly announced the formation of a new non-profit organization, the eBPF Foundation, under the auspices of the Linux Foundation. The Foundation is dedicated to better promoting the open source project eBPF and supporting the commercial growth of Linux and other open source technologies.
In recent years, the number of eBPF projects has exploded and more and more projects are interested in using eBPF, so it is increasingly important to optimize collaboration between projects, ensure that the core of eBPF is well maintained and configure a clear roadmap for the future of eBPF.</description>
    </item>
    
    <item>
      <title>PineNote: an e-ink screen reader that runs Linux</title>
      <link>https://www.sobyte.net/post/2021-08/pine64-pinenote/</link>
      <pubDate>Tue, 17 Aug 2021 15:34:33 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/pine64-pinenote/</guid>
      <description>Pine64 (the company behind the Pinebook Pro and PinePhone) announced will launch the PineNote, a high-end e-ink screen device based on the Quartz64 single-board computer. The company says the PineNote is one of the most powerful e-ink devices on the market; it can be used as an open-source alternative to more expensive counterparts such as Remarkable 2 and Onyx BOOX.
According to the description, the PineNote is powered by the RK3566 quad-core A55 system chip paired with 4GB of LPDDR4 memory and 128GB of eMMC flash memory.</description>
    </item>
    
    <item>
      <title>Intel provides extensive graphics driver optimizations for Linux 5.15</title>
      <link>https://www.sobyte.net/post/2021-08/intel-help-with-drx-next/</link>
      <pubDate>Mon, 09 Aug 2021 22:16:53 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-08/intel-help-with-drx-next/</guid>
      <description>On Friday, Intel engineers committed a large amount of code on the DRM-Next branch of the Linux kernel, mainly on the kernel graphics driver, with the following highlights.
 Extensive code refactoring to increase the use of TTM dispensers and prepare for the DRM scheduler. Cleaned up uAPI and dropped faster GPU relocation paths on older platforms, instead mitigating performance issues by updating to the latest UMD version. Initially implemented code for ADL-P/XeHP and DG2 platforms, fixed ADL-S and removed CNL code.</description>
    </item>
    
    <item>
      <title>Rsync Usage Tutorial</title>
      <link>https://www.sobyte.net/post/2021-06/rsync-usage-tutorial/</link>
      <pubDate>Thu, 17 Jun 2021 19:30:36 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2021-06/rsync-usage-tutorial/</guid>
      <description>1. Introduction rsync is a commonly used Linux application for file synchronization.
It can synchronize files between the local computer and a remote computer, or between two local directories (but does not support synchronization between two remote computers). It can also be used as a file copying tool, replacing the cp and mv commands.
The r in its name refers to remote, rsync actually means &amp;ldquo;remote synchronization&amp;rdquo;. Unlike other file transfer tools (such as FTP or scp), rsync&amp;rsquo;s main feature is that it checks the existing files of both the sender and the receiver and only transfers the parts that have changed (the default rule is that the file size or modification time has changed).</description>
    </item>
    
  </channel>
</rss>
