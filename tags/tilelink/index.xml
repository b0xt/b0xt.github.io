<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tilelink on SoByte</title>
    <link>https://www.sobyte.net/tags/tilelink/</link>
    <description>Recent content in tilelink on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 11 May 2022 13:47:44 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/tilelink/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TileLink Bus Protocol Analysis</title>
      <link>https://www.sobyte.net/post/2022-05/tilelink/</link>
      <pubDate>Wed, 11 May 2022 13:47:44 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/tilelink/</guid>
      <description>Background Recently, I have been working on some cache implementations that support cache coherency, such as the rocket-chip implementation and the sifive implementation, so I need to study some TileLink protocols. This article assumes that the reader has some knowledge of AXI, so much of the content will refer directly to AXI.
Signals According to TileLink Spec 1.8.0, TileLink is divided into the following Three types.
TL-UL: Read/write only, no burst support, analogous to AXI-Lite TL-UH: read/write support, atomic instruction, prefetch, burst support, analogous to AXI+ATOP (atomic operation introduced by AXI5) TL-C: support cache coherency protocol based on TL-UH, analogous to AXI+ACE/CHI TileLink Uncached TileLink Uncached (TL-UL and TL-UH) consists of two channels.</description>
    </item>
    
  </channel>
</rss>
