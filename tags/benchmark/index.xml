<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Benchmark on SoByte</title>
    <link>https://www.sobyte.net/tags/benchmark/</link>
    <description>Recent content in Benchmark on SoByte</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 23 May 2022 13:31:14 +0800</lastBuildDate><atom:link href="https://www.sobyte.net/tags/benchmark/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Benchmark Comparative Analysis Tool</title>
      <link>https://www.sobyte.net/post/2022-05/benchmark-comparative-analysis-tool/</link>
      <pubDate>Mon, 23 May 2022 13:31:14 +0800</pubDate>
      
      <guid>https://www.sobyte.net/post/2022-05/benchmark-comparative-analysis-tool/</guid>
      <description>In Go, it is easy to write Benchmark functions to test the performance of a function point. For important functions, we can add the corresponding test process in CI/CD to be aware of the function performance changes when they occur. So the question is, how do you detect performance changes in a function?
To put it another way, you write a function and find that it is slow and you need to optimize it, and when you Google it and find a better implementation, you find that it is indeed faster through the Benchmark function.</description>
    </item>
    
  </channel>
</rss>
